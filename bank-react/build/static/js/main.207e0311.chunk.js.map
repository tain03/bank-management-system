{"version":3,"sources":["styles/HomeStyle.module.css","styles/NavStyle.module.css","components/Navigation.tsx","pages/home/Home.tsx","api/config.ts","api/ClientAPI.ts","pages/client/TblClient.tsx","pages/client/Client.tsx","pages/client/ClientAdd.tsx","pages/client/ClientEdit.tsx","api/EmployeeAPI.ts","pages/employee/TblEmployee.tsx","pages/employee/Employee.tsx","pages/employee/EmployeeAdd.tsx","pages/employee/EmployeeEdit.tsx","pages/employee/EmployeeSalary.tsx","api/DepositAPI.ts","pages/account/deposit/TblDeposit.tsx","api/CreditAPI.ts","pages/account/credit/TblCredit.tsx","pages/account/Account.tsx","pages/account/deposit/DepositAdd.tsx","pages/account/deposit/DepositEdit.tsx","pages/account/credit/CreditAdd.tsx","pages/account/credit/CreditEdit.tsx","pages/transaction/TblTran.tsx","pages/transaction/Transaction.tsx","pages/page_not_found/PageNotFound.tsx","pages/statistic/Top10Client.tsx","api/TransactionAPI.ts","pages/transaction/TransAdd.tsx","pages/transaction/TransTransfers.tsx","pages/statistic/AccountInDebt.tsx","pages/statistic/TblTransaction.tsx","pages/statistic/TblCredit.tsx","pages/statistic/StatisticTransaction.tsx","index.tsx"],"names":["module","exports","Navigation","props","state","className","style","container","green","borderXwidth","href","React","Component","Home","bg_body","showcase","content","src","logo","alt","title","text","config","API_URL","getAllClient","a","fetch","rawData","status","json","getClientByID","id","searchClient","keyword","getTop10Client","updateClient","client","method","headers","body","JSON","stringify","deleteClient","insertClient","TblClient","this","clients","length","map","onClick","window","location","identityCard","name","Date","dateOfBirth","toDateString","address","action","type","clickDelete","Swal","fire","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","reload","ClientPage","submitHandle","e","preventDefault","Toast","data","setState","inputHandle","target","value","document","placeholder","onChange","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","ClientAdd","required","newClient","clickAdd","ClientEditPage","Number","parseInt","match","params","disabled","clickSave","getAllEmployee","getEmployeeByID","searchEmployee","getEmployeeSalary","time","salary","NaN","updateEmployee","employee","deleteEmployee","insertEmployee","TblEmployee","employees","level","experience","_deleteHandle","bind","Employee","_inpHandle","EmployeeAdd","newEmployee","_clickHandle","EmployeeEdit","_saveHandle","EmployeeSalary","getAllDeposit","getDepositByID","updateDeposit","deposit","deleteDeposit","insertDeposit","TblDeposit","deposits","balance","rate","minBalance","idClient","getAllCredit","getCreditByID","getByTimeTransaction","start","end","getByBalance","updateCredit","credit","deleteCredit","insertCredit","TblCredit","credits","creditLimit","Account","depositAccounts","creditAccounts","DepositAdd","employeeCreate","newDeposit","parseFloat","preDeposit","selected","_addHandle","history","goBack","DepositEdit","idDeposit","CreditAdd","newCredit","preCredit","CreditEdit","idCredit","TblTran","transactions","tran","amount","createAt","toLocaleString","Transaction","listTransaction","PageNotFound","Top10Client","insertTranstion","transferMoney","TransAddCredit","creditAccount","depositAccount","TransTransfers","AccountInDebt","TblTransaction","StatisticTransaction","_onUpdate","render","exact","path","component","Client","ClientEdit","TransAdd","to","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,QAAU,2BAA2B,SAAW,4BAA4B,QAAU,2BAA2B,KAAO,wBAAwB,MAAQ,yBAAyB,KAAO,wBAAwB,UAAY,6BAA6B,OAAS,0BAA0B,SAAS,0BAA0B,OAAS,0BAA0B,WAAW,4BAA4B,UAAU,2BAA2B,SAAW,8B,mBCA3cD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,IAAM,sBAAsB,OAAS,yBAAyB,OAAS,yBAAyB,KAAO,uBAAuB,KAAO,uBAAuB,KAAO,uBAAuB,MAAQ,wBAAwB,WAAa,6BAA6B,KAAO,uBAAuB,OAAS,yBAAyB,MAAQ,wBAAwB,OAAS,yBAAyB,WAAa,6BAA6B,MAAQ,wBAAwB,KAAO,uBAAuB,mBAAqB,qCAAqC,kBAAoB,oCAAoC,eAAiB,iCAAiC,aAAe,+BAA+B,SAAW,2BAA2B,WAAa,6BAA6B,aAAe,+BAA+B,SAAW,2BAA2B,OAAS,yBAAyB,UAAY,4BAA4B,SAAW,2BAA2B,WAAa,6BAA6B,cAAgB,gCAAgC,iBAAmB,mCAAmC,gBAAkB,oC,sIC8CjqCC,E,kDA3CZ,WAAYC,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,GAFQ,E,qDAKrB,OACG,sBACGC,UAAS,UAAKC,IAAMC,UAAX,YAAwBD,IAAME,MAA9B,YAAuCF,IAAMG,cADzD,UAGG,mBAAGC,KAAK,IAAR,4BACA,mBAAGA,KAAK,UAAR,8BACA,mBAAGA,KAAK,YAAR,6BACA,sBAAKL,UAAU,YAAf,UAEG,oBAAGA,UAAU,WAAb,8BACY,mBAAGA,UAAU,+BAEzB,qBAAIA,UAAU,gBAAd,UACG,6BACG,mBAAGA,UAAU,gBAAgBK,KAAK,yBAAlC,8BAIH,6BACG,mBACGL,UAAU,gBACVK,KAAK,6BAFR,4EAOH,6BACG,mBAAGL,UAAU,gBAAgBK,KAAK,mBAAlC,4F,GAjCIC,IAAMC,W,iBCwBhBC,E,uKArBT,OACG,sBAAKR,UAAWC,IAAMQ,QAAtB,UACG,cAAC,EAAD,IACA,wBAAQT,UAAWC,IAAMS,SAAzB,SACG,sBAAKV,UAAWC,IAAMU,QAAtB,UACG,qBACGC,IAAI,+BACJZ,UAAWC,IAAMY,KACjBC,IAAI,mBAEP,qBAAKd,UAAWC,IAAMc,MAAtB,iCACA,qBAAKf,UAAWC,IAAMe,KAAtB,gG,GAbCV,IAAMC,W,uCCJZU,EAEP,6ECAAC,EAAUD,EAAiB,WAEpBE,EAAY,uCAAG,4BAAAC,EAAA,sEACHC,MAAMH,GADH,UAEF,OADjBI,EADmB,QAEbC,OAFa,yCAEUD,EAAQE,QAFlB,gCAGlB,IAHkB,2CAAH,qDAMZC,EAAa,uCAAG,WAAOC,GAAP,eAAAN,EAAA,sEACJC,MAAMH,EAAUQ,GADZ,UAEH,OADjBJ,EADoB,QAEdC,OAFc,yCAESD,EAAQE,QAFjB,gCAGnB,IAHmB,2CAAH,sDAMbG,EAAY,uCAAG,WAAOC,GAAP,eAAAR,EAAA,sEACHC,MAAMH,EAAU,UAAYU,GADzB,UAEF,OADjBN,EADmB,QAEbC,OAFa,yCAEUD,EAAQE,QAFlB,gCAGlB,IAHkB,2CAAH,sDAMZK,EAAc,uCAAG,4BAAAT,EAAA,sEACLC,MAAMH,EAAU,UADX,UAEJ,OADjBI,EADqB,QAEfC,OAFe,yCAEQD,EAAQE,QAFhB,gCAGpB,IAHoB,2CAAH,qDAMdM,EAAY,uCAAG,WAAOC,GAAP,eAAAX,EAAA,sEACHC,MAAMH,EAAUa,EAAOL,GAAI,CAC9CM,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUL,KAJC,cACnBT,EADmB,yBAMlBA,GANkB,2CAAH,sDASZe,EAAY,uCAAG,WAAOX,GAAP,eAAAN,EAAA,sEACHC,MAAMH,EAAUQ,EAAI,CACvCM,OAAQ,WAFc,cACnBV,EADmB,yBAIlBA,GAJkB,2CAAH,sDAOZgB,EAAY,uCAAG,WAAOP,GAAP,eAAAX,EAAA,sEACHC,MAAMH,EAAS,CAClCc,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUL,KAJC,cACnBT,EADmB,yBAMlBA,GANkB,2CAAH,sDCkDViB,E,kDAnFZ,WAAYzC,GAAgB,IAAD,8BACxB,cAAMA,IACDC,MAAQ,GAFW,E,kGAMxB,OAAkC,IAA9ByC,KAAK1C,MAAM2C,QAAQC,OACb,4EAGJ,wBAAO1C,UAAU,oBAAjB,UACG,uBAAOA,UAAU,UAAjB,SACG,+BACG,oCACA,qCACA,gDACA,8CACA,wDACA,0DAGN,gCACIwC,KAAK1C,MAAM2C,QAAQE,KAAI,SAACZ,GAAD,OACrB,+BACG,oBACGa,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,kBAAkC0B,EAAOL,KAFhD,SAKIK,EAAOL,KAEX,oBACGkB,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,kBAAkC0B,EAAOL,KAFhD,SAKIK,EAAOgB,eAEX,oBACGH,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,kBAAkC0B,EAAOL,KAFhD,SAKIK,EAAOiB,OAEX,oBACGJ,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,kBAAkC0B,EAAOL,KAFhD,SAKI,IAAIuB,KAAKlB,EAAOmB,aAAaC,iBAEjC,oBACGP,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,kBAAkC0B,EAAOL,KAFhD,SAKIK,EAAOqB,UAEX,+BACG,sBACGC,OAAM,uBAAkBtB,EAAOL,IAC/BM,OAAO,MAFV,SAIG,wBAAQhC,UAAU,kBAAlB,wBAEH,wBACGA,UAAU,oBACVsD,KAAK,SACLV,QAAS,kBAAMW,EAAYxB,EAAOL,KAHrC,yBA3CGK,EAAOL,gB,GAxBbpB,IAAMC,WAsFxBgD,EAAc,SAAC7B,GAClB8B,IAAKC,KAAK,CACP1C,MAAO,sDACPC,KAAM,oDACN0C,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,gCACnBC,KARH,uCAQQ,WAAOC,GAAP,SAAA5C,EAAA,0DACD4C,EAAOC,YADN,gCAEqB5B,EAAaX,GAFlC,OAGsB,MAHtB,OAGWH,OACVsB,OAAOC,SAASoB,SAEhBV,IAAKC,KAAK,mCAAwB,GAAI,SANvC,2CARR,wDCHYU,E,kDA9EZ,WAAYrE,GAAa,IAAD,8BACrB,cAAMA,IAiBTsE,aAAe,SAACC,GACbA,EAAEC,iBACyB,KAAvB,EAAKvE,MAAM6B,QACZ2C,EAAMd,KAAK,CACRC,KAAM,QACN3C,MAAO,yDAGVY,EAAa,EAAK5B,MAAM6B,SAASmC,MAAK,SAACS,GAAD,OACnC,EAAKC,SAAS,CAAEhC,QAAS+B,QA3BV,EAgCxBE,YAhCwB,uCAgCV,WAAOL,GAAP,SAAAjD,EAAA,sEACL,EAAKqD,SAAS,CAAE7C,QAASyC,EAAEM,OAAOC,QAD7B,OAEP,EAAK7E,MAAM6B,SAAkC,MAAvB,EAAK7B,MAAM6B,QAClCD,EAAa,EAAK5B,MAAM6B,SAASmC,MAAK,SAACS,GAAD,OACnC,EAAKC,SAAS,CAAEhC,QAAS+B,OAG5BrD,IAAe4C,MAAK,SAACS,GAAD,OAAU,EAAKC,SAAS,CAAEhC,QAAS+B,OAP/C,2CAhCU,sDAErB,EAAKzE,MAAQ,CACV6B,QAAS,GACTa,QAAS,IAJS,E,wEAUrBoC,SAAS9D,MAAQ,kB,0KAIKI,I,OAAhBsB,E,OACND,KAAKiC,SAAS,CAAEhC,QAASA,I,qIA4BlB,IAAD,OACN,OACG,gCACG,cAAC,EAAD,IACA,qBAAKzC,UAAU,YAAf,SACG,sBAAKA,UAAU,sCAAf,UACG,qBAAKA,UAAU,mBAAf,SACG,iEAEH,sBAAKA,UAAU,qCAAf,UACG,sBAAKA,UAAU,wBAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,oBAEhB,uBACGA,UAAU,eACVsD,KAAK,SACLwB,YAAY,oCACZ9B,KAAK,UACL4B,MAAOpC,KAAKzC,MAAM6B,QAClBmD,SAAU,SAACV,GAAD,OAAO,EAAKK,YAAYL,SAGxC,mBAAGrE,UAAU,kBAAkBK,KAAK,cAApC,yCAIH,cAAC,EAAD,CAAWoC,QAASD,KAAKzC,MAAM0C,sB,GAvExBnC,IAAMC,WAiFzBgE,EAAQf,IAAKwB,MAAM,CACtBC,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,EAClBC,QAAS,SAACL,GACPA,EAAMM,iBAAiB,aAAc/B,IAAKgC,WAC1CP,EAAMM,iBAAiB,aAAc/B,IAAKiC,gBCcjCC,E,kDArGZ,WAAY5F,GAAgB,IAAD,8BACxB,cAAMA,IACDC,MAAQ,CACVgC,OAAQ,CACLL,GAAI,EACJqB,aAAc,GACdC,KAAM,GACNE,YAAa,GACbE,QAAS,KARS,E,iEAcxByB,SAAS9D,MAAQ,sB,+BAGV,IAAD,OACN,OACG,sBAAKf,UAAU,aAAf,UACG,oBAAIA,UAAU,QAAd,sCACA,sBAAKA,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,sBAEhB,uBACGA,UAAU,eACV2F,UAAQ,EACRb,YAAY,2BACZF,MAAOpC,KAAKzC,MAAMgC,OAAOgB,aACzBgC,SAAU,SAACV,GACR,IAAIuB,EAAiB,EAAK7F,MAAMgC,OAChC6D,EAAU7C,aAAesB,EAAEM,OAAOC,MAClC,EAAKH,SAAS,CAAE1C,OAAQ6D,UAIjC,sBAAK5F,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,uBAEhB,uBACGA,UAAU,eACV2F,UAAQ,EACRb,YAAY,iBACZF,MAAQpC,KAAKzC,MAAMgC,OAAeiB,KAClC+B,SAAU,SAACV,GACR,IAAIuB,EAAiB,EAAK7F,MAAMgC,OAChC6D,EAAU5C,KAAOqB,EAAEM,OAAOC,MAC1B,EAAKH,SAAS,CAAE1C,OAAQ6D,UAIjC,sBAAK5F,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,2BAEhB,uBACGA,UAAU,eACV2F,UAAQ,EACRrC,KAAK,OACLsB,MAAQpC,KAAKzC,MAAMgC,OAAemB,YAClC6B,SAAU,SAACV,GACR,IAAIuB,EAAiB,EAAK7F,MAAMgC,OAChC6D,EAAU1C,YAAcmB,EAAEM,OAAOC,MACjC,EAAKH,SAAS,CAAE1C,OAAQ6D,UAIjC,sBAAK5F,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,4BAEhB,uBACGA,UAAU,eACV2F,UAAQ,EACRb,YAAY,yBACZF,MAAQpC,KAAKzC,MAAMgC,OAAeqB,QAClC2B,SAAU,SAACV,GACR,IAAIuB,EAAiB,EAAK7F,MAAMgC,OAChC6D,EAAUxC,QAAUiB,EAAEM,OAAOC,MAC7B,EAAKH,SAAS,CAAE1C,OAAQ6D,UAIjC,sBAAK5F,UAAU,SAAf,UACG,wBACGA,UAAU,kBACV4C,QAAS,kBAAMiD,EAAS,EAAK9F,MAAMgC,SAFtC,qBAMA,mBAAG/B,UAAU,eAAeK,KAAK,UAAjC,gC,GA7FSC,IAAMC,WAwGxBsF,EAAQ,uCAAG,WAAO9D,GAAP,SAAAX,EAAA,sEACSkB,EAAaP,GADtB,OAEU,MAFV,OAEDR,OAAgBsB,OAAOC,SAASzC,KAAO,UAC/CmD,IAAKC,KAAK,oCAAyB,GAAI,SAH9B,2CAAH,sDCOCqC,E,kDAjHZ,WAAYhG,GAAgB,IAAD,8BACxB,cAAMA,IACDC,MAAQ,CACVgC,OAAQ,IAHa,E,iEAQxB8C,SAAS9D,MAAQ,uB,0CAGC,IAAD,OACjBU,EAAcsE,OAAOC,SAASxD,KAAK1C,MAAMmG,MAAMC,OAAOxE,KAAKqC,MAAK,SAACS,GAAD,OAC7D,EAAKC,SAAS,CAAE1C,OAAQyC,S,+BAIpB,IAAD,OACN,OACG,sBAAKxE,UAAU,aAAf,UACG,oBAAIA,UAAU,QAAd,oDACA,sBAAKA,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,qBAEhB,uBACGA,UAAU,eACV2F,UAAQ,EACRQ,UAAQ,EACRrB,YAAY,yBACZF,MAAQpC,KAAKzC,MAAMgC,OAAeL,QAGxC,sBAAK1B,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,sBAEhB,uBACGA,UAAU,eACV2F,UAAQ,EACRb,YAAY,2BACZF,MAAQpC,KAAKzC,MAAMgC,OAAegB,aAClCgC,SAAU,SAACV,GACR,IAAIuB,EAAiB,EAAK7F,MAAMgC,OAChC6D,EAAU7C,aAAesB,EAAEM,OAAOC,MAClC,EAAKH,SAAS,CAAE1C,OAAQ6D,UAIjC,sBAAK5F,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,uBAEhB,uBACGA,UAAU,eACV2F,UAAQ,EACRb,YAAY,iBACZF,MAAQpC,KAAKzC,MAAMgC,OAAeiB,KAClC+B,SAAU,SAACV,GACR,IAAIuB,EAAiB,EAAK7F,MAAMgC,OAChC6D,EAAU5C,KAAOqB,EAAEM,OAAOC,MAC1B,EAAKH,SAAS,CAAE1C,OAAQ6D,UAIjC,sBAAK5F,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,2BAEhB,uBACGA,UAAU,eACV2F,UAAQ,EACRrC,KAAK,OACLsB,MAAQpC,KAAKzC,MAAMgC,OAAemB,YAClC6B,SAAU,SAACV,GACR,IAAIuB,EAAiB,EAAK7F,MAAMgC,OAChC6D,EAAU1C,YAAcmB,EAAEM,OAAOC,MACjC,EAAKH,SAAS,CAAE1C,OAAQ6D,UAIjC,sBAAK5F,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,4BAEhB,uBACGA,UAAU,eACV2F,UAAQ,EACRb,YAAY,yBACZF,MAAQpC,KAAKzC,MAAMgC,OAAeqB,QAClC2B,SAAU,SAACV,GACR,IAAIuB,EAAiB,EAAK7F,MAAMgC,OAChC6D,EAAUxC,QAAUiB,EAAEM,OAAOC,MAC7B,EAAKH,SAAS,CAAE1C,OAAQ6D,UAIjC,sBAAK5F,UAAU,SAAf,UACG,wBACGA,UAAU,kBACV4C,QAAS,SAACyB,GAAD,OAAO+B,EAAU,EAAKrG,MAAMgC,SAFxC,sBAMA,mBAAG/B,UAAU,eAAeK,KAAK,UAAjC,gC,GAzGcC,IAAMC,WAoH7B6F,EAAS,uCAAG,WAAOrE,GAAP,SAAAX,EAAA,sEACMU,EAAaC,GADnB,OAEO,MAFP,OAEJR,OAAgBsB,OAAOC,SAASzC,KAAO,UAC7CmD,IAAKC,KAAK,qCAAwB,GAAI,SAH5B,2CAAH,sDC/HTvC,EAAUD,EAAiB,aAEpBoF,EAAc,uCAAG,4BAAAjF,EAAA,sEACLC,MAAMH,GADD,UAEJ,OADjBI,EADqB,QAEfC,OAFe,yCAEQD,EAAQE,QAFhB,gCAGpB,IAHoB,2CAAH,qDAMd8E,EAAe,uCAAG,WAAO5E,GAAP,eAAAN,EAAA,sEACNC,MAAMH,EAAUQ,GADV,UAEL,OADjBJ,EADsB,QAEhBC,OAFgB,yCAEOD,EAAQE,QAFf,gCAGrB,IAHqB,2CAAH,sDAMf+E,EAAc,uCAAG,WAAO3E,GAAP,eAAAR,EAAA,sEACLC,MAAMH,EAAU,UAAYU,GADvB,UAEJ,OADjBN,EADqB,QAEfC,OAFe,yCAEQD,EAAQE,QAFhB,gCAGpB,IAHoB,2CAAH,sDAMdgF,EAAiB,uCAAG,WAAO9E,EAAS+E,GAAhB,iBAAArF,EAAA,sEACRC,MACnBH,EAAO,sCAAkCQ,EAAlC,kBAA8C+E,IAF1B,UAIP,OAHjBnF,EADwB,QAIlBC,OAJkB,gCAKND,EAAQE,OALF,cAKrBkF,EALqB,yBAMpBA,EAAOA,QANa,gCAQvBC,KARuB,2CAAH,wDAWjBC,EAAc,uCAAG,WAAOC,GAAP,eAAAzF,EAAA,sEACLC,MAAMH,EAAU2F,EAASnF,GAAI,CAChDM,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUyE,KAJG,cACrBvF,EADqB,yBAMpBA,GANoB,2CAAH,sDASdwF,EAAc,uCAAG,WAAOpF,GAAP,eAAAN,EAAA,sEACLC,MAAMH,EAAUQ,EAAI,CACvCM,OAAQ,WAFgB,cACrBV,EADqB,yBAIpBA,GAJoB,2CAAH,sDAOdyF,EAAc,uCAAG,WAAOF,GAAP,eAAAzF,EAAA,sEACLC,MAAMH,EAAS,CAClCc,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUyE,KAJG,cACrBvF,EADqB,yBAMpBA,GANoB,2CAAH,sDCsFZ0F,E,kDAlIZ,WAAYlH,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,GAFQ,E,mGAKJ2B,G,iEACjB8B,IAAKC,KAAK,CACP1C,MAAO,sDACPC,KAAM,oDACN0C,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,gCACnBC,KARH,uCAQQ,WAAOC,GAAP,SAAA5C,EAAA,0DACD4C,EAAOC,YADN,gCAEqB6C,EAAepF,GAFpC,OAGsB,MAHtB,OAGWH,OACVsB,OAAOC,SAASzC,KAAO,YAEvBmD,IAAKC,KAAK,mCAAwB,GAAI,SANvC,2CARR,uD,iIAoBO,IAAD,OACN,OAAoC,IAAhCjB,KAAK1C,MAAMmH,UAAUvE,OACf,2EAGJ,wBAAO1C,UAAU,oBAAjB,UACG,uBAAOA,UAAU,UAAjB,SACG,+BACG,oCACA,qCACA,gDACA,8CACA,wDACA,oDACA,kDACA,gDACA,0DAGN,gCACIwC,KAAK1C,MAAMmH,UAAUtE,KAAI,SAACkE,GAAD,OACvB,+BACG,oBACGjE,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,2BAA2CwG,EAASnF,KAF3D,SAKImF,EAASnF,KAEb,oBACGkB,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,2BAA2CwG,EAASnF,KAF3D,SAKImF,EAAS9D,eAEb,oBACGH,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,2BAA2CwG,EAASnF,KAF3D,SAKImF,EAAS7D,OAEb,oBACGJ,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,2BAA2CwG,EAASnF,KAF3D,SAKI,IAAIuB,KAAK4D,EAAS3D,aAAaC,iBAEnC,oBACGP,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,2BAA2CwG,EAASnF,KAF3D,SAKImF,EAASzD,UAEb,oBACGR,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,2BAA2CwG,EAASnF,KAF3D,SAKImF,EAASK,QAEb,oBACGtE,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,2BAA2CwG,EAASnF,KAF3D,SAKImF,EAASM,aAEb,oBACGvE,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,2BAA2CwG,EAASnF,KAF3D,SAKImF,EAAS3B,WAEb,+BACG,sBACG7B,OAAM,yBAAoBwD,EAASnF,IACnCM,OAAO,MAFV,SAIG,wBAAQhC,UAAU,kBAAlB,wBAEH,wBACGA,UAAU,oBACVsD,KAAK,SACLV,QAAS,EAAKwE,cAAcC,KACzB,EACAR,EAASnF,IALf,yBAhEGmF,EAASnF,gB,GAhDbpB,IAAMC,WCgEjB+G,E,kDA9DZ,WAAYxH,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CACV6B,QAAS,GACTqF,UAAW,IAJO,E,iEASrBpC,SAAS9D,MAAQ,oB,0KAIOsF,I,OAAlBY,E,OACNzE,KAAKiC,SAAS,CAAEwC,UAAWA,I,gLAGb5C,G,4FACR7B,KAAKiC,SAAS,CAAE7C,QAASyC,EAAEM,OAAOC,Q,OACpCpC,KAAKzC,MAAM6B,SAAkC,MAAvBY,KAAKzC,MAAM6B,QAClC2E,EAAe/D,KAAKzC,MAAM6B,SAASmC,MAAK,SAACS,GAAD,OACrC,EAAKC,SAAS,CAAEwC,UAAWzC,OAG9B6B,IAAiBtC,MAAK,SAACS,GAAD,OAAU,EAAKC,SAAS,CAAEwC,UAAWzC,O,sIAIvD,IAAD,OACN,OACG,gCACG,cAAC,EAAD,IACA,qBAAKxE,UAAU,eAAf,SACG,sBAAKA,UAAU,sCAAf,UACG,qBAAKA,UAAU,mBAAf,SACG,gEAEH,sBAAKA,UAAU,qCAAf,UACG,sBAAKA,UAAU,wBAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,oBAEhB,uBACGA,UAAU,eACVsD,KAAK,SACLwB,YAAY,mCACZF,MAAOpC,KAAKzC,MAAM6B,QAClBmD,SAAU,SAACV,GAAD,OAAO,EAAKkD,WAAWlD,SAGvC,mBAAGrE,UAAU,kBAAkBK,KAAK,gBAApC,wCAIH,cAAC,EAAD,CAAa4G,UAAWzE,KAAKzC,MAAMkH,wB,GAvD9B3G,IAAMC,WCqJdiH,E,kDArJZ,WAAY1H,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CACV8G,SAAU,IAHQ,E,iEAQrBhC,SAAS9D,MAAQ,wB,+JAIGgG,EAAevE,KAAKzC,MAAM8G,U,OACzB,M,OAAXtF,OAAgBsB,OAAOC,SAASzC,KAAO,YAC5CmD,IAAKC,KAAK,oCAAyB,GAAI,S,qIAGrC,IAAD,OACN,OACG,sBAAKzD,UAAU,aAAf,UACG,oBAAIA,UAAU,QAAd,0CACA,sBAAKA,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,sBAEhB,uBACGA,UAAU,eACV2F,UAAQ,EACRb,YAAY,2BACZF,MAAOpC,KAAKzC,MAAM8G,SAAS9D,aAC3BgC,SAAU,SAACV,GACR,IAAIoD,EAAc,EAAK1H,MAAM8G,SAC7BY,EAAY1E,aAAesB,EAAEM,OAAOC,MACpC,EAAKH,SAAS,CAAEoC,SAAUY,UAInC,sBAAKzH,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,uBAEhB,uBACGA,UAAU,eACV2F,UAAQ,EACRb,YAAY,iBACZF,MAAOpC,KAAKzC,MAAM8G,SAAS7D,KAC3B+B,SAAU,SAACV,GACR,IAAIoD,EAAc,EAAK1H,MAAM8G,SAC7BY,EAAYzE,KAAOqB,EAAEM,OAAOC,MAC5B,EAAKH,SAAS,CAAEoC,SAAUY,UAInC,sBAAKzH,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,2BAEhB,uBACGA,UAAU,eACV2F,UAAQ,EACRrC,KAAK,OACLsB,MAAOpC,KAAKzC,MAAM8G,SAAS3D,YAC3B6B,SAAU,SAACV,GACR,IAAIoD,EAAc,EAAK1H,MAAM8G,SAC7BY,EAAYvE,YAAcmB,EAAEM,OAAOC,MACnC,EAAKH,SAAS,CAAEoC,SAAUY,UAInC,sBAAKzH,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,4BAEhB,uBACGA,UAAU,eACV2F,UAAQ,EACRb,YAAY,yBACZF,MAAOpC,KAAKzC,MAAM8G,SAASzD,QAC3B2B,SAAU,SAACV,GACR,IAAIoD,EAAc,EAAK1H,MAAM8G,SAC7BY,EAAYrE,QAAUiB,EAAEM,OAAOC,MAC/B,EAAKH,SAAS,CAAEoC,SAAUY,UAInC,sBAAKzH,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,qBAEhB,uBACGA,UAAU,eACV2F,UAAQ,EACRb,YAAY,qBACZF,MAAOpC,KAAKzC,MAAM8G,SAASK,MAC3BnC,SAAU,SAACV,GACR,IAAIoD,EAAc,EAAK1H,MAAM8G,SAC7BY,EAAYP,MAAQ7C,EAAEM,OAAOC,MAC7B,EAAKH,SAAS,CAAEoC,SAAUY,UAInC,sBAAKzH,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,yBAEhB,uBACGA,UAAU,eACV2F,UAAQ,EACRb,YAAY,kBACZF,MAAOpC,KAAKzC,MAAM8G,SAASM,WAC3BpC,SAAU,SAACV,GACR,IAAIoD,EAAmB,EAAK1H,MAAM8G,SAClCY,EAAYN,WAAa9C,EAAEM,OAAOC,MAClC,EAAKH,SAAS,CAAEoC,SAAUY,UAInC,sBAAKzH,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,mBAEhB,uBACGA,UAAU,eACV2F,UAAQ,EACRb,YAAY,mCACZF,MAAOpC,KAAKzC,MAAM8G,SAAS3B,SAC3BH,SAAU,SAACV,GACR,IAAIoD,EAAc,EAAK1H,MAAM8G,SAC7BY,EAAYvC,SAAWb,EAAEM,OAAOC,MAChC,EAAKH,SAAS,CAAEoC,SAAUY,UAInC,sBAAKzH,UAAU,SAAf,UACG,wBACGA,UAAU,kBACV4C,QAASJ,KAAKkF,aAAaL,KAAK7E,MAFnC,qBAMA,mBAAGxC,UAAU,eAAeK,KAAK,YAAjC,gC,GA7IWC,IAAMC,WCiKjBoH,E,kDAhKZ,WAAY7H,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CACV8G,SAAU,IAHQ,E,iEAQrBhC,SAAS9D,MAAQ,yB,0KAIMuF,EACpB9D,KAAK1C,MAAMmG,MAAMC,OAAOxE,I,OADrBmF,E,OAGNrE,KAAKiC,SAAS,CAAEoC,SAAUA,I,oQAILD,EAAepE,KAAKzC,MAAM8G,U,OACzB,M,OAAXtF,OAAgBsB,OAAOC,SAASzC,KAAO,YAC7CmD,IAAKC,KAAK,qCAAwB,GAAI,S,qIAGpC,IAAD,OACN,OACG,sBAAKzD,UAAU,aAAf,UACG,oBAAIA,UAAU,QAAd,mDACA,sBAAKA,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,qBAEhB,uBACGA,UAAU,eACVmG,UAAQ,EACRrB,YAAY,wBACZF,MAAOpC,KAAKzC,MAAM8G,SAASnF,QAGjC,sBAAK1B,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,sBAEhB,uBACGA,UAAU,eACV8E,YAAY,2BACZF,MAAOpC,KAAKzC,MAAM8G,SAAS9D,aAC3BgC,SAAU,SAACV,GACR,IAAIoD,EAAc,EAAK1H,MAAM8G,SAC7BY,EAAY1E,aAAesB,EAAEM,OAAOC,MACpC,EAAKH,SAAS,CAAEoC,SAAUY,UAInC,sBAAKzH,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,uBAEhB,uBACGA,UAAU,eACV8E,YAAY,iBACZF,MAAOpC,KAAKzC,MAAM8G,SAAS7D,KAC3B+B,SAAU,SAACV,GACR,IAAIoD,EAAc,EAAK1H,MAAM8G,SAC7BY,EAAYzE,KAAOqB,EAAEM,OAAOC,MAC5B,EAAKH,SAAS,CAAEoC,SAAUY,UAInC,sBAAKzH,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,2BAEhB,uBACGA,UAAU,eACVsD,KAAK,OACLsB,MAAOpC,KAAKzC,MAAM8G,SAAS3D,YAC3B6B,SAAU,SAACV,GACR,IAAIoD,EAAc,EAAK1H,MAAM8G,SAC7BY,EAAYvE,YAAcmB,EAAEM,OAAOC,MACnC,EAAKH,SAAS,CAAEoC,SAAUY,UAInC,sBAAKzH,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,4BAEhB,uBACGA,UAAU,eACV8E,YAAY,yBACZF,MAAOpC,KAAKzC,MAAM8G,SAASzD,QAC3B2B,SAAU,SAACV,GACR,IAAIoD,EAAc,EAAK1H,MAAM8G,SAC7BY,EAAYrE,QAAUiB,EAAEM,OAAOC,MAC/B,EAAKH,SAAS,CAAEoC,SAAUY,UAInC,sBAAKzH,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,qBAEhB,uBACGA,UAAU,eACV8E,YAAY,qBACZF,MAAOpC,KAAKzC,MAAM8G,SAASK,MAC3BnC,SAAU,SAACV,GACR,IAAIoD,EAAc,EAAK1H,MAAM8G,SAC7BY,EAAYP,MAAQ7C,EAAEM,OAAOC,MAC7B,EAAKH,SAAS,CAAEoC,SAAUY,UAInC,sBAAKzH,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,yBAEhB,uBACGA,UAAU,eACV8E,YAAY,kBACZF,MAAOpC,KAAKzC,MAAM8G,SAASM,WAC3BpC,SAAU,SAACV,GACR,IAAIoD,EAAmB,EAAK1H,MAAM8G,SAClCY,EAAYN,WAAa9C,EAAEM,OAAOC,MAClC,EAAKH,SAAS,CAAEoC,SAAUY,UAInC,sBAAKzH,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,mBAEhB,uBACGA,UAAU,eACV8E,YAAY,mCACZF,MAAOpC,KAAKzC,MAAM8G,SAAS3B,SAC3BH,SAAU,SAACV,GACR,IAAIoD,EAAc,EAAK1H,MAAM8G,SAC7BY,EAAYvC,SAAWb,EAAEM,OAAOC,MAChC,EAAKH,SAAS,CAAEoC,SAAUY,UAInC,sBAAKzH,UAAU,SAAf,UACG,wBACGA,UAAU,kBACV4C,QAASJ,KAAKoF,YAAYP,KAAK7E,MAFlC,sBAMA,mBAAGxC,UAAU,eAAeK,KAAK,YAAjC,gC,GAxJYC,IAAMC,WC6DlBsH,E,kDA7DZ,WAAY/H,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CACV2G,OAAQC,IACRF,KAAM,GACNI,SAAU,IALQ,E,gMAUEP,EAAgB9D,KAAK1C,MAAMmG,MAAMC,OAAOxE,I,OAAzDmF,E,OACNrE,KAAKiC,SAAS,CAAEoC,SAAUA,I,2QAILL,EAClBhE,KAAK1C,MAAMmG,MAAMC,OAAOxE,GACxBc,KAAKzC,MAAM0G,M,OAFRC,E,OAINlE,KAAKiC,SAAS,CAAEiC,OAAQA,I,qIAGjB,IAAD,OACN,OACG,sBAAK1G,UAAU,aAAf,UACG,qBAAIA,UAAU,QAAd,sDAC0BwC,KAAKzC,MAAM8G,SAAS7D,QAE9C,sBAAKhD,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,0BAEhB,uBACGA,UAAU,eACV8E,YAAY,qBACZF,MAAOpC,KAAKzC,MAAM0G,KAClB1B,SAAU,SAACV,GAAD,OAAO,EAAKI,SAAS,CAAEgC,KAAMpC,EAAEM,OAAOC,WAEnD,sBAAM5E,UAAU,mBAAhB,wBAEH,qBAAKA,UAAU,cAAf,SACG,uBAAMA,UAAU,gCAAhB,wCACgBwC,KAAKzC,MAAM2G,YAG9B,sBAAK1G,UAAU,SAAf,UACG,wBACGA,UAAU,kBACV4C,QAASJ,KAAKkF,aAAaL,KAAK7E,MAFnC,iCAMA,mBAAGxC,UAAU,eAAeK,KAAK,YAAjC,qC,GArDcC,IAAMC,WCD7BW,GAAUD,EAAiB,mBAEpB6G,GAAa,uCAAG,4BAAA1G,EAAA,sEACJC,MAAMH,IADF,UAEH,OADjBI,EADoB,QAEdC,OAFc,yCAESD,EAAQE,QAFjB,gCAGnB,IAHmB,2CAAH,qDAMbuG,GAAc,uCAAG,WAAOrG,GAAP,eAAAN,EAAA,sEACLC,MAAMH,GAAUQ,GADX,UAEJ,OADjBJ,EADqB,QAEfC,OAFe,yCAEQD,EAAQE,QAFhB,gCAGpB,IAHoB,2CAAH,sDAMdwG,GAAa,uCAAG,WAAOC,GAAP,eAAA7G,EAAA,sEACJC,MAAMH,GAAU+G,EAAQvG,GAAI,CAC/CM,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU6F,KAJE,cACpB3G,EADoB,yBAMnBA,GANmB,2CAAH,sDASb4G,GAAa,uCAAG,WAAOxG,GAAP,eAAAN,EAAA,sEACJC,MAAMH,GAAUQ,EAAI,CACvCM,OAAQ,WAFe,cACpBV,EADoB,yBAInBA,GAJmB,2CAAH,sDAOb6G,GAAa,uCAAG,WAAOF,GAAP,eAAA7G,EAAA,sEACJC,MAAMH,GAAS,CAClCc,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU6F,KAJE,cACpB3G,EADoB,yBAMnBA,GANmB,2CAAH,sDCkFX8G,G,kDA7GZ,WAAYtI,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,GAFQ,E,mGAKJ2B,G,iEACjB8B,IAAKC,KAAK,CACP1C,MAAO,sDACPC,KAAM,oDACN0C,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,gCACnBC,KARH,uCAQQ,WAAOC,GAAP,SAAA5C,EAAA,0DACD4C,EAAOC,YADN,gCAEqBiE,GAAcxG,GAFnC,OAGsB,MAHtB,OAGWH,OACVsB,OAAOC,SAASoB,SAEhBV,IAAKC,KAAK,mCAAwB,GAAI,SANvC,2CARR,uD,iIAoBO,IAAD,OACN,OAAmC,IAA/BjB,KAAK1C,MAAMuI,SAAS3F,OACd,gGAGJ,8BACG,wBAAO1C,UAAU,oBAAjB,UACG,uBAAOA,UAAU,UAAjB,SACG,+BACG,+CACA,2CACA,iDACA,mEACA,qEACA,0DAGN,gCACIwC,KAAK1C,MAAMuI,SAAS1F,KAAI,SAACsF,GAAD,OACtB,+BACG,oBACGrF,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,+BAA+C4H,EAAQvG,KAF9D,SAKIuG,EAAQvG,KAEZ,oBACGkB,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,+BAA+C4H,EAAQvG,KAF9D,SAKIuG,EAAQ3E,OAEZ,oBACGV,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,+BAA+C4H,EAAQvG,KAF9D,SAKIuG,EAAQK,UAEZ,qBACG1F,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,+BAA+C4H,EAAQvG,KAF9D,UAKIuG,EAAQM,KALZ,OAOA,oBACG3F,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,+BAA+C4H,EAAQvG,KAF9D,SAKIuG,EAAQO,aAEZ,+BACG,sBACGnF,OAAM,wBAAmB4E,EAAQvG,GAA3B,YAAiC,EAAK5B,MAAM2I,UAClDzG,OAAO,MAFV,SAIG,wBAAQhC,UAAU,kBAAlB,wBAIH,wBACGA,UAAU,oBACV4C,QAAS,EAAKwE,cAAcC,KACzB,EACAY,EAAQvG,IAJd,yBA7CGuG,EAAQvG,kB,GA9ChBpB,IAAMC,WCFzBW,GAAUD,EAAiB,kBAEpByH,GAAY,uCAAG,4BAAAtH,EAAA,sEACHC,MAAMH,IADH,UAEF,OADjBI,EADmB,QAEbC,OAFa,yCAEUD,EAAQE,QAFlB,gCAGlB,IAHkB,2CAAH,qDAMZmH,GAAa,uCAAG,WAAOjH,GAAP,eAAAN,EAAA,sEACJC,MAAMH,GAAUQ,GADZ,UAEH,OADjBJ,EADoB,QAEdC,OAFc,yCAESD,EAAQE,QAFjB,gCAGnB,IAHmB,2CAAH,sDAMboH,GAAoB,uCAAG,WACjCH,EACAI,EACAC,GAHiC,eAAA1H,EAAA,sEAKXC,MACnBH,GAAO,mCACwB4H,EADxB,sBACyCL,EADzC,kBAC2DI,IAPpC,UASV,OAJjBvH,EAL2B,QASrBC,OATqB,yCASED,EAAQE,QATV,gCAU1B,IAV0B,2CAAH,0DAapBuH,GAAY,uCAAG,4BAAA3H,EAAA,sEACHC,MAAMH,GAAU,gBADb,UAEF,OADjBI,EADmB,QAEbC,OAFa,yCAEUD,EAAQE,QAFlB,gCAGlB,IAHkB,2CAAH,qDAMZwH,GAAY,uCAAG,WAAOC,GAAP,eAAA7H,EAAA,sEACHC,MAAMH,GAAU+H,EAAOvH,GAAI,CAC9CM,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU6G,KAJC,cACnB3H,EADmB,yBAMlBA,GANkB,2CAAH,sDASZ4H,GAAY,uCAAG,WAAOxH,GAAP,eAAAN,EAAA,sEACHC,MAAMH,GAAUQ,EAAI,CACvCM,OAAQ,WAFc,cACnBV,EADmB,yBAIlBA,GAJkB,2CAAH,sDAOZ6H,GAAY,uCAAG,WAAOF,GAAP,eAAA7H,EAAA,sEACHC,MAAMH,GAAS,CAClCc,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU6G,KAJC,cACnB3H,EADmB,yBAMlBA,GANkB,2CAAH,sDCsDV8H,G,kDApGZ,WAAYtJ,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,GAFQ,E,mGAKJ2B,G,iEACjB8B,IAAKC,KAAK,CACP1C,MAAO,sDACPC,KAAM,oDACN0C,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,gCACnBC,KARH,uCAQQ,WAAOC,GAAP,SAAA5C,EAAA,0DACD4C,EAAOC,YADN,gCAEqBiF,GAAaxH,GAFlC,OAGsB,MAHtB,OAGWH,OACVsB,OAAOC,SAASoB,SAEhBV,IAAKC,KAAK,mCAAwB,GAAI,SANvC,2CARR,uD,iIAoBO,IAAD,OACN,OAAkC,IAA9BjB,KAAK1C,MAAMuJ,QAAQ3G,OACb,8FAGJ,8BACG,wBAAO1C,UAAU,oBAAjB,UACG,uBAAOA,UAAU,UAAjB,SACG,+BACG,+CACA,2CACA,iDACA,oEACA,0DAGN,gCACIwC,KAAK1C,MAAMuJ,QAAQ1G,KAAI,SAACsG,GAAD,OACrB,+BACG,oBACGrG,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,8BAA8C4I,EAAOvH,KAF5D,SAKIuH,EAAOvH,KAEX,oBACGkB,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,8BAA8C4I,EAAOvH,KAF5D,SAKIuH,EAAO3F,OAEX,oBACGV,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,8BAA8C4I,EAAOvH,KAF5D,SAKIuH,EAAOX,UAEX,oBACG1F,QAAS,kBACLC,OAAOC,SAASzC,KAAhB,8BAA8C4I,EAAOvH,KAF5D,SAKIuH,EAAOK,cAEX,+BACG,sBACGjG,OAAM,uBAAkB4F,EAAOvH,GAAzB,YAA+B,EAAK5B,MAAM2I,UADnD,SAGG,wBAAQzI,UAAU,kBAAlB,wBAIH,wBACGA,UAAU,oBACV4C,QAAS,EAAKwE,cAAcC,KACzB,EACA4B,EAAOvH,IAJb,yBArCGuH,EAAOvH,kB,GA7ChBpB,IAAMC,WCwEfgJ,G,kDArEZ,WAAYzJ,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CACVgC,OAAQ,CAAEyH,gBAAiB,GAAIC,eAAgB,KAH7B,E,iEAQrB5E,SAAS9D,MAAQ,kB,0KAIIU,EAAce,KAAK1C,MAAMmG,MAAMC,OAAOxE,I,OAArDK,E,OACNS,KAAKiC,SAAS,CAAE1C,OAAQA,I,qIAIxB,OACG,gCACG,cAAC,EAAD,IACA,sBAAK/B,UAAU,YAAf,UACG,sBAAKA,UAAU,sCAAf,UACG,qBAAKA,UAAU,mBAAf,SACG,2FACuC,IACnCwC,KAAKzC,MAAMgC,OAAOiB,UAGzB,sBAAKhD,UAAU,qCAAf,UACG,uEACA,mBACGA,UAAU,uBACVK,KAAI,uBAAkBmC,KAAKzC,MAAMgC,OAAOL,IAF3C,0DAMA,mBACG1B,UAAU,uBACVK,KAAI,qBAAgBmC,KAAK1C,MAAMmG,MAAMC,OAAOxE,IAF/C,6DAOH,cAAC,GAAD,CACG2G,SAAU7F,KAAKzC,MAAMgC,OAAOyH,gBAC5Bf,SAAUjG,KAAKzC,MAAMgC,OAAOL,QAGlC,sBAAK1B,UAAU,sCAAf,UACG,sBAAKA,UAAU,gCAAf,UACG,qEACA,mBACGA,UAAU,uBACVK,KAAI,sBAAiBmC,KAAKzC,MAAMgC,OAAOL,IAF1C,2DAOH,cAAC,GAAD,CACG2H,QAAS7G,KAAKzC,MAAMgC,OAAO0H,eAC3BhB,SAAUjG,KAAKzC,MAAMgC,OAAOL,kB,GA7D3BpB,IAAMC,WC6HbmJ,G,kDA7HZ,WAAY5J,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CACVkI,QAAS,CAAElG,OAAQ,GAAI4H,eAAgB,IACvC1C,UAAW,IAJO,E,iEASrBpC,SAAS9D,MAAQ,+B,0KAIOsF,I,OAAlBY,E,OACNzE,KAAKiC,SAAS,CACXwD,QAAS,CACNlG,OAAQ,CAAEL,GAAIc,KAAK1C,MAAMmG,MAAMC,OAAOxE,IACtCiI,eAAgB,IAEnB1C,UAAWA,I,mQAKMkB,GAAc3F,KAAKzC,MAAMkI,S,OACxB,M,OAAX1G,OACPsB,OAAOC,SAASzC,KAAhB,kBAAkCmC,KAAK1C,MAAMmG,MAAMC,OAAOxE,IACxD8B,IAAKC,KAAK,oCAAyB,GAAI,S,qIAGrC,IAAD,OACN,OACG,sBAAKzD,UAAU,aAAf,UACG,oBAAIA,UAAU,QAAd,0DACA,sBAAKA,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,qBAEhB,uBACGA,UAAU,eACV8E,YAAY,8BACZF,MAAOpC,KAAKzC,MAAMkI,QAAQ3E,KAC1ByB,SAAU,SAACV,GACR,IAAIuF,EAAa,EAAK7J,MAAMkI,QAC5B2B,EAAWtG,KAAOe,EAAEM,OAAOC,MAC3B,EAAKH,SAAS,CAAEwD,QAAS2B,UAIlC,sBAAK5J,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,qBAEhB,uBACGA,UAAU,eACV8E,YAAY,oCACZxB,KAAK,SACLsB,MAAOpC,KAAKzC,MAAMkI,QAAQM,KAC1BxD,SAAU,SAACV,GACR,IAAIuF,EAAa,EAAK7J,MAAMkI,QAC5B2B,EAAWrB,KAAOxC,OAAO8D,WAAWxF,EAAEM,OAAOC,OAC7C,EAAKH,SAAS,CAAEwD,QAAS2B,UAIlC,sBAAK5J,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,yBAEhB,uBACGA,UAAU,eACV8E,YAAY,sCACZxB,KAAK,SACLsB,MAAOpC,KAAKzC,MAAMkI,QAAQO,WAC1BzD,SAAU,SAACV,GACR,IAAIuF,EAAa,EAAK7J,MAAMkI,QAC5B2B,EAAWpB,WAAazC,OAAO8D,WAAWxF,EAAEM,OAAOC,OACnD,EAAKH,SAAS,CAAEwD,QAAS2B,UAIlC,sBAAK5J,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,sBAEhB,yBACGA,UAAU,cACV4E,MAAOpC,KAAKzC,MAAMkI,QAAQ0B,eAAejI,GACzCqD,SAAU,SAACV,GACR,IAAIyF,EAAa,EAAK/J,MAAMkI,QAC5B6B,EAAWH,eAAejI,GAAKqE,OAAOC,SACnC3B,EAAEM,OAAOC,OAEZ,EAAKH,SAAS,CAAEwD,QAAS6B,KAR/B,UAWG,wBAAQ3D,UAAQ,EAAC4D,UAAQ,EAAzB,gDAGCvH,KAAKzC,MAAMkH,UAAUtE,KAAI,SAACkE,GAAD,OACvB,yBAA0BjC,MAAOiC,EAASnF,GAA1C,iBACQmF,EAASnF,GADjB,YAC8BmF,EAAS7D,OAD1B6D,EAASnF,aAM/B,sBAAK1B,UAAU,SAAf,UACG,wBACGA,UAAU,kBACV4C,QAASJ,KAAKwH,WAAW3C,KAAK7E,MAFjC,qBAMA,wBACGxC,UAAU,eACV4C,QAAS,kBAAM,EAAK9C,MAAMmK,QAAQC,UAFrC,gC,GAlHU5J,IAAMC,WCwHhB4J,G,kDAxHZ,WAAYrK,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CACVkI,QAAS,IAHS,E,iEAQrBpD,SAAS9D,MAAQ,gC,0KAIKgH,GAAevF,KAAK1C,MAAMmG,MAAMC,OAAOkE,W,OAAvDnC,E,OACNzF,KAAKiC,SAAS,CAAEwD,QAASA,I,oQAIJD,GAAcxF,KAAKzC,MAAMkI,S,OACxB,M,OAAX1G,OACRsB,OAAOC,SAASzC,KAAhB,kBAAkCmC,KAAK1C,MAAMmG,MAAMC,OAAOuC,UACxDjF,IAAKC,KAAK,qCAAwB,GAAI,S,qIAGpC,IAAD,OACN,OACG,sBAAKzD,UAAU,aAAf,UACG,oBAAIA,UAAU,QAAd,2DACA,sBAAKA,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,yBAEhB,uBACGA,UAAU,eACV8E,YAAY,0BACZqB,UAAQ,EACRvB,MAAOpC,KAAKzC,MAAMkI,QAAQvG,QAGhC,sBAAK1B,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,qBAEhB,uBACGA,UAAU,eACV8E,YAAY,8BACZF,MAAOpC,KAAKzC,MAAMkI,QAAQ3E,KAC1ByB,SAAU,SAACV,GACR,IAAIuF,EAAa,EAAK7J,MAAMkI,QAC5B2B,EAAWtG,KAAOe,EAAEM,OAAOC,MAC3B,EAAKH,SAAS,CAAEwD,QAAS2B,UAIlC,sBAAK5J,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,oBAEhB,uBACGA,UAAU,eACV8E,YAAY,kBACZxB,KAAK,SACLsB,MAAOpC,KAAKzC,MAAMkI,QAAQK,QAC1BvD,SAAU,SAACV,GACR,IAAIuF,EAAa,EAAK7J,MAAMkI,QAC5B2B,EAAWtB,QAAUvC,OAAO8D,WAAWxF,EAAEM,OAAOC,OAChD,EAAKH,SAAS,CAAEwD,QAAS2B,UAIlC,sBAAK5J,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,qBAEhB,uBACGA,UAAU,eACV8E,YAAY,oCACZxB,KAAK,SACLsB,MAAOpC,KAAKzC,MAAMkI,QAAQM,KAC1BxD,SAAU,SAACV,GACR,IAAIuF,EAAa,EAAK7J,MAAMkI,QAC5B2B,EAAWrB,KAAOxC,OAAO8D,WAAWxF,EAAEM,OAAOC,OAC7C,EAAKH,SAAS,CAAEwD,QAAS2B,UAIlC,sBAAK5J,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,yBAEhB,uBACGA,UAAU,eACV8E,YAAY,sCACZxB,KAAK,SACLsB,MAAOpC,KAAKzC,MAAMkI,QAAQO,WAC1BzD,SAAU,SAACV,GACR,IAAIuF,EAAa,EAAK7J,MAAMkI,QAC5B2B,EAAWpB,WAAazC,OAAO8D,WAAWxF,EAAEM,OAAOC,OACnD,EAAKH,SAAS,CAAEwD,QAAS2B,UAIlC,sBAAK5J,UAAU,SAAf,UACG,wBACGA,UAAU,kBACV4C,QAASJ,KAAKoF,YAAYP,KAAK7E,MAFlC,sBAMA,wBACGxC,UAAU,eACV4C,QAAS,kBAAM,EAAK9C,MAAMmK,QAAQC,UAFrC,gC,GA7GW5J,IAAMC,WC+GjB8J,G,kDA7GZ,WAAYvK,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CACVkJ,OAAQ,CAAElH,OAAQ,GAAI4H,eAAgB,IACtC1C,UAAW,IAJO,E,iEASrBpC,SAAS9D,MAAQ,8B,0KAIOsF,I,OAAlBY,E,OACNzE,KAAKiC,SAAS,CACXwE,OAAQ,CACLlH,OAAQ,CAAEL,GAAIc,KAAK1C,MAAMmG,MAAMC,OAAOxE,IACtCiI,eAAgB,IAEnB1C,UAAWA,I,gQAKVqD,EAAY9H,KAAKzC,MAAMkJ,QACjBK,YAAcvD,OAAO8D,WAAWrH,KAAKzC,MAAMuJ,aACrD9G,KAAKiC,SAAS,CAAEwE,OAAQqB,I,SACJnB,GAAa3G,KAAKzC,MAAMkJ,Q,OACvB,M,OAAX1H,OACPsB,OAAOC,SAASzC,KAAhB,kBAAkCmC,KAAK1C,MAAMmG,MAAMC,OAAOxE,IACxD8B,IAAKC,KAAK,oCAAyB,GAAI,S,qIAGrC,IAAD,OACN,OACG,sBAAKzD,UAAU,aAAf,UACG,oBAAIA,UAAU,QAAd,wDACA,sBAAKA,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,qBAEhB,uBACGA,UAAU,eACV8E,YAAY,8BACZF,MAAOpC,KAAKzC,MAAMkJ,OAAO3F,KACzByB,SAAU,SAACV,GACR,IAAIiG,EAAY,EAAKvK,MAAMkJ,OAC3BqB,EAAUhH,KAAOe,EAAEM,OAAOC,MAC1B,EAAKH,SAAS,CAAEwE,OAAQqB,UAIjC,sBAAKtK,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,2BAEhB,uBACGA,UAAU,eACV8E,YAAY,qCACZF,MAAOpC,KAAKzC,MAAMuJ,YAClBvE,SAAU,SAACV,GAAD,OACP,EAAKI,SAAS,CAAE6E,YAAajF,EAAEM,OAAOC,cAI/C,sBAAK5E,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,sBAEhB,yBACGA,UAAU,cACV4E,MAAOpC,KAAKzC,MAAMkJ,OAAOU,eAAejI,GACxCqD,SAAU,SAACV,GACR,IAAIkG,EAAY,EAAKxK,MAAMkJ,OAC3BsB,EAAUZ,eAAejI,GAAKqE,OAAOC,SAClC3B,EAAEM,OAAOC,OAEZ,EAAKH,SAAS,CAAEwE,OAAQsB,KAR9B,UAWG,wBAAQpE,UAAQ,EAAC4D,UAAQ,EAAzB,gDAGCvH,KAAKzC,MAAMkH,UAAUtE,KAAI,SAACkE,GAAD,OACvB,yBAA0BjC,MAAOiC,EAASnF,GAA1C,iBACQmF,EAASnF,GADjB,YAC8BmF,EAAS7D,OAD1B6D,EAASnF,aAM/B,sBAAK1B,UAAU,SAAf,UACG,wBACGA,UAAU,kBACV4C,QAASJ,KAAKwH,WAAW3C,KAAK7E,MAFjC,qBAMA,wBACGxC,UAAU,eACV4C,QAAS,kBAAM,EAAK9C,MAAMmK,QAAQC,UAFrC,gC,GAlGS5J,IAAMC,WC0GfiK,G,kDA1GZ,WAAY1K,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CACVkJ,OAAQ,IAHU,E,iEAQrBpE,SAAS9D,MAAQ,+B,0KAII4H,GAAcnG,KAAK1C,MAAMmG,MAAMC,OAAOuE,U,OAArDxB,E,OACNzG,KAAKiC,SAAS,CAAEwE,OAAQA,I,iQAIpBqB,EAAY9H,KAAKzC,MAAMkJ,QACjBK,YAAcvD,OAAO8D,WAAWS,EAAUhB,aACpDgB,EAAUhC,QAAUvC,OAAO8D,WAAWS,EAAUhC,SAChD9F,KAAKiC,SAAS,CAAEwE,OAAQqB,I,SACHtB,GAAaxG,KAAKzC,MAAMkJ,Q,OACvB,M,OAAX1H,OACRsB,OAAOC,SAASzC,KAAhB,kBAAkCmC,KAAK1C,MAAMmG,MAAMC,OAAOuC,UACxDjF,IAAKC,KAAK,qCAAwB,GAAI,S,qIAGpC,IAAD,OACN,OACG,sBAAKzD,UAAU,aAAf,UACG,oBAAIA,UAAU,QAAd,yDACA,sBAAKA,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,yBAEhB,uBACGA,UAAU,eACV8E,YAAY,0BACZqB,UAAQ,EACRvB,MAAOpC,KAAKzC,MAAMkJ,OAAOvH,QAG/B,sBAAK1B,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,qBAEhB,uBACGA,UAAU,eACV8E,YAAY,8BACZF,MAAOpC,KAAKzC,MAAMkJ,OAAO3F,KACzByB,SAAU,SAACV,GACR,IAAIiG,EAAY,EAAKvK,MAAMkJ,OAC3BqB,EAAUhH,KAAOe,EAAEM,OAAOC,MAC1B,EAAKH,SAAS,CAAEwE,OAAQqB,UAIjC,sBAAKtK,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,oBAEhB,uBACGA,UAAU,eACV8E,YAAY,kBACZF,MAAOpC,KAAKzC,MAAMkJ,OAAOX,QACzBvD,SAAU,SAACV,GACR,IAAIiG,EAAY,EAAKvK,MAAMkJ,OAC3BqB,EAAUhC,QAAUjE,EAAEM,OAAOC,MAC7B,EAAKH,SAAS,CAAEwE,OAAQqB,UAIjC,sBAAKtK,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,2BAEhB,uBACGA,UAAU,eACV8E,YAAY,qCACZF,MAAOpC,KAAKzC,MAAMkJ,OAAOK,YACzBvE,SAAU,SAACV,GACR,IAAIiG,EAAY,EAAKvK,MAAMkJ,OAC3BqB,EAAUhB,YAAcjF,EAAEM,OAAOC,MACjC,EAAKH,SAAS,CAAEwE,OAAQqB,UAIjC,sBAAKtK,UAAU,SAAf,UACG,wBACGA,UAAU,kBACV4C,QAASJ,KAAKoF,YAAYP,KAAK7E,MAFlC,sBAMA,wBACGxC,UAAU,eACV4C,QAAS,kBAAM,EAAK9C,MAAMmK,QAAQC,UAFrC,gC,GA/FU5J,IAAMC,WCmChBmK,G,kDApCZ,WAAY5K,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,GAFQ,E,qDAMrB,OAAuC,IAAnCyC,KAAK1C,MAAM6K,aAAajI,OAClB,sEAGJ,8BACG,wBAAO1C,UAAU,oBAAjB,UACG,uBAAOA,UAAU,UAAjB,SACG,+BACG,oCACA,mDACA,+CACA,qDAGN,gCACIwC,KAAK1C,MAAM6K,aAAahI,KAAI,SAACiI,GAAD,OAC1B,+BACG,6BAAKA,EAAKlJ,KACV,6BAAKkJ,EAAKC,SACV,6BAAKD,EAAKjK,UACV,6BAAK,IAAIsC,KAAK2H,EAAKE,UAAUC,qBAJvBH,EAAKlJ,kB,GAvBhBpB,IAAMC,WCwDbyK,G,kDAnDZ,WAAYlL,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CACV4K,aAAc,IAHI,E,qLAQgB,YAAjCnI,KAAK1C,MAAMmG,MAAMC,OAAO5C,K,gCACHyE,GAAevF,KAAK1C,MAAMmG,MAAMC,OAAOxE,I,OAAvDuG,E,OACNzF,KAAKiC,SAAS,CAAEkG,aAAc1C,EAAQgD,kB,0BACG,WAAjCzI,KAAK1C,MAAMmG,MAAMC,OAAO5C,K,kCACXqF,GAAcnG,KAAK1C,MAAMmG,MAAMC,OAAOxE,I,QAArDuH,E,OACNzG,KAAKiC,SAAS,CAAEkG,aAAc1B,EAAOgC,kB,sIAKxC,OACG,gCACG,cAAC,EAAD,IACA,qBAAKjL,UAAU,YAAf,SACG,sBAAKA,UAAU,sCAAf,UACG,qBAAKA,UAAU,mBAAf,SACG,iFAEH,qBAAKA,UAAU,qCAAf,SACqC,WAAjCwC,KAAK1C,MAAMmG,MAAMC,OAAO5C,KACtB,mBACGtD,UAAU,kBACVK,KAAI,kCAA6BmC,KAAK1C,MAAMmG,MAAMC,OAAOxE,IAF5D,qDAOA,mBACG1B,UAAU,kBACVK,KAAI,mCAA8BmC,KAAK1C,MAAMmG,MAAMC,OAAOxE,IAF7D,yDAQN,cAAC,GAAD,CAASiJ,aAAcnI,KAAKzC,MAAM4K,2B,GA5C1BrK,IAAMC,WCMjB2K,G,uKART,OACG,8BACG,sD,GAJe5K,IAAMC,WCiClB4K,G,kDA7BZ,WAAYrL,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CACV0C,QAAS,IAHS,E,gMAQCZ,I,OAAhBY,E,OACND,KAAKiC,SAAS,CAAEhC,QAASA,I,qIAIzB,OACG,gCACG,cAAC,EAAD,IACA,qBAAKzC,UAAU,YAAf,SACG,sBAAKA,UAAU,sCAAf,UACG,qBAAKA,UAAU,mBAAf,SACG,gHAEH,cAAC,EAAD,CAAWyC,QAASD,KAAKzC,MAAM0C,sB,GAtBvBnC,IAAMC,WCH1BW,GAAUD,EAAiB,gBAEpBmK,GAAe,uCAAG,WAAOR,GAAP,eAAAxJ,EAAA,sEACNC,MAAMH,GAAS,CAClCc,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUwI,KAJI,cACtBtJ,EADsB,yBAMrBA,GANqB,2CAAH,sDAgBf+J,GAAa,uCAAG,WAC1BR,EACAJ,EACAL,GAH0B,eAAAhJ,EAAA,sEAKJC,MACnBH,GAAO,iCACsB2J,EADtB,sBAC0CJ,EAD1C,uBACiEL,GACxE,CACGpI,OAAQ,SATY,cAKpBV,EALoB,yBAYnBA,GAZmB,2CAAH,0DC+DXgK,G,kDA9EZ,WAAYxL,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CACVY,QAAS,GACTkK,OAAQ,IAJU,E,iLAUgB,WAAjCrI,KAAK1C,MAAMmG,MAAMC,OAAO5C,KACzBsH,EAAO,CACJjK,QAAS6B,KAAKzC,MAAMY,QACpBkK,OAAQ9E,OAAO8D,WAAWrH,KAAKzC,MAAM8K,QACrCU,cAAe,CAAE7J,GAAIc,KAAK1C,MAAMmG,MAAMC,OAAOxE,KAEP,YAAjCc,KAAK1C,MAAMmG,MAAMC,OAAO5C,OAChCsH,EAAO,CACJjK,QAAS6B,KAAKzC,MAAMY,QACpBkK,OAAQ9E,OAAO8D,WAAWrH,KAAKzC,MAAM8K,QACrCW,eAAgB,CAAE9J,GAAIc,KAAK1C,MAAMmG,MAAMC,OAAOxE,M,SAGhC0J,GAAgBR,G,OACf,M,OAAXrJ,OACPsB,OAAOC,SAASzC,KAAhB,uBAAuCmC,KAAK1C,MAAMmG,MAAMC,OAAO5C,KAA/D,YAAuEd,KAAK1C,MAAMmG,MAAMC,OAAOxE,IAC7F8B,IAAKC,KAAK,oCAAyB,GAAI,S,qIAGrC,IAAD,OACN,OACG,sBAAKzD,UAAU,aAAf,UACG,oBAAIA,UAAU,QAAd,oCACA,sBAAKA,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,qBAEhB,uBACGA,UAAU,eACV8E,YAAY,gBACZF,MAAOpC,KAAKzC,MAAMY,QAClBoE,SAAU,SAACV,GAAD,OAAO,EAAKI,SAAS,CAAE9D,QAAS0D,EAAEM,OAAOC,cAGzD,sBAAK5E,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,6BAEhB,uBACGA,UAAU,eACV8E,YAAY,oBACZF,MAAOpC,KAAKzC,MAAM8K,OAClB9F,SAAU,SAACV,GAAD,OACP,EAAKI,SAAS,CACXoG,OAAQxG,EAAEM,OAAOC,cAK7B,sBAAK5E,UAAU,SAAf,UACG,wBACGA,UAAU,kBACV4C,QAASJ,KAAKkF,aAAaL,KAAK7E,MAFnC,qBAMA,mBACGxC,UAAU,eACVK,KAAI,uBAAkBmC,KAAK1C,MAAMmG,MAAMC,OAAO5C,KAA1C,YAAkDd,KAAK1C,MAAMmG,MAAMC,OAAOxE,IAFjF,qC,GAnEcpB,IAAMC,WCgHpBkL,G,kDA7GZ,WAAY3L,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CACVsJ,QAAS,GACThB,SAAU,IAJQ,E,kMASCK,K,cAAhBW,E,gBACiBvB,K,OAAjBO,E,OACN7F,KAAKiC,SAAS,CAAE4E,QAASA,EAAShB,SAAUA,I,qQAIxBgD,GACjB7I,KAAKzC,MAAM8K,OACXrI,KAAKzC,MAAM0K,SACXjI,KAAKzC,MAAMqK,W,OAEO,M,OAAX7I,OACPsB,OAAOC,SAASzC,KAAhB,kBAAkCmC,KAAK1C,MAAMmG,MAAMC,OAAOxE,IACxD8B,IAAKC,KAAK,oCAAyB,GAAI,S,qIAGrC,IAAD,OACN,OACG,sBAAKzD,UAAU,aAAf,UACG,oBAAIA,UAAU,QAAd,0DACA,sBAAKA,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,6BAEhB,uBACGA,UAAU,eACV8E,YAAY,oBACZF,MAAOpC,KAAKzC,MAAM8K,OAClB9F,SAAU,SAACV,GAAD,OACP,EAAKI,SAAS,CACXoG,OAAQxG,EAAEM,OAAOC,cAK7B,sBAAK5E,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,kBAEhB,yBACGA,UAAU,cACV4E,MAAOpC,KAAKzC,MAAM0K,SAClB1F,SAAU,SAACV,GAAD,OACP,EAAKI,SAAS,CACXgG,SAAU1E,OAAOC,SAAS3B,EAAEM,OAAOC,UAL5C,UASG,wBAAQuB,UAAQ,EAAC4D,UAAQ,EAAzB,0DAGCvH,KAAKzC,MAAMsJ,QAAQ1G,KAAI,SAACsG,GAAD,OACrB,yBAAwBrE,MAAOqE,EAAOvH,GAAtC,iBACQuH,EAAOvH,GADf,uBAC6BuH,EAAOX,UADvBW,EAAOvH,aAM7B,sBAAK1B,UAAU,cAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,sBAEhB,yBACGA,UAAU,cACV4E,MAAOpC,KAAKzC,MAAMqK,UAClBrF,SAAU,SAACV,GAAD,OACP,EAAKI,SAAS,CACX2F,UAAWrE,OAAOC,SAAS3B,EAAEM,OAAOC,UAL7C,UASG,wBAAQuB,UAAQ,EAAC4D,UAAQ,EAAzB,4DAGCvH,KAAKzC,MAAMsI,SAAS1F,KAAI,SAACsF,GAAD,OACtB,yBAAyBrD,MAAOqD,EAAQvG,GAAxC,iBACQuG,EAAQvG,GADhB,uBAC8BuG,EAAQK,UADzBL,EAAQvG,aAM9B,sBAAK1B,UAAU,SAAf,UACG,wBACGA,UAAU,kBACV4C,QAASJ,KAAKkF,aAAaL,KAAK7E,MAFnC,qBAMA,wBACGxC,UAAU,eACV4C,QAAS,kBAAM,EAAK9C,MAAMmK,QAAQC,UAFrC,gC,GAlGc5J,IAAMC,WC2BpBmL,G,kDA3BZ,WAAY5L,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CAAEsJ,QAAS,IAFH,E,gMAMCN,K,OAAhBM,E,OACN7G,KAAKiC,SAAS,CAAE4E,QAASA,I,qIAIzB,OACG,gCACG,cAAC,EAAD,IACA,qBAAKrJ,UAAU,YAAf,SACG,sBAAKA,UAAU,sCAAf,UACG,qBAAKA,UAAU,mBAAf,SACG,4FAEH,cAAC,GAAD,CAAWqJ,QAAS7G,KAAKzC,MAAMsJ,sB,GApBrB/I,IAAMC,WCsCnBoL,G,kDAxCZ,WAAY7L,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,GAFQ,E,qDAKrB,OAAuC,IAAnCyC,KAAK1C,MAAM6K,aAAajI,OAEtB,qBAAK1C,UAAU,sCAAf,SACG,wEAKH,sBAAKA,UAAU,sCAAf,UACG,iDACA,wBAAOA,UAAU,oBAAjB,UACG,uBAAOA,UAAU,UAAjB,SACG,+BACG,oCACA,mDACA,+CACA,qDAGN,gCACIwC,KAAK1C,MAAM6K,aAAahI,KAAI,SAACiI,GAAD,OAC1B,+BACG,6BAAKA,EAAKlJ,KACV,6BAAKkJ,EAAKC,SACV,6BAAKD,EAAKjK,UACV,6BAAK,IAAIsC,KAAK2H,EAAKE,UAAUC,qBAJvBH,EAAKlJ,mB,GA3BTpB,IAAMC,WCoDpB6I,G,kDAlDZ,WAAYtJ,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CAAE4K,aAAc,IAFR,E,qDAId,IAAD,OACN,OAAkC,IAA9BnI,KAAK1C,MAAMuJ,QAAQ3G,OAEjB,qBAAK1C,UAAU,sCAAf,SACG,gGAKH,gCACG,sBAAKA,UAAU,sCAAf,UACG,qEACA,wBAAOA,UAAU,oBAAjB,UACG,uBAAOA,UAAU,UAAjB,SACG,+BACG,+CACA,2CACA,iDACA,yEAGN,gCACIwC,KAAK1C,MAAMuJ,QAAQ1G,KAAI,SAACsG,GAAD,OACrB,qBAEGrG,QAAS,kBACN,EAAK6B,SAAS,CACXkG,aAAc1B,EAAOgC,mBAJ9B,UAQG,6BAAKhC,EAAOvH,KACZ,6BAAKuH,EAAO3F,OACZ,6BAAK2F,EAAOX,UACZ,6BAAKW,EAAOK,gBAVPL,EAAOvH,eAgB3B,cAAC,GAAD,CAAgBiJ,aAAcnI,KAAKzC,MAAM4K,sB,GA7ChCrK,IAAMC,WC4FfqL,G,kDAxFZ,WAAY9L,GAAa,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CAAE0C,QAAS,GAAI4G,QAAS,IAFhB,E,gMAMClI,I,OAAhBsB,E,OACND,KAAKiC,SAAS,CAAEhC,QAASA,I,wQAIHmG,GACnBpG,KAAKzC,MAAM0I,SACXjG,KAAKzC,MAAM8I,MACXrG,KAAKzC,MAAM+I,K,OAHRO,E,OAKN7G,KAAKiC,SAAS,CAAE4E,QAASA,I,qIAGlB,IAAD,OACN,OACG,gCACG,cAAC,EAAD,IACA,sBAAKrJ,UAAU,YAAf,UACG,sBAAKA,UAAU,sCAAf,UACG,qBAAKA,UAAU,mBAAf,SACG,oGAEH,sBAAKA,UAAU,gCAAf,UACG,sBAAKA,UAAU,mBAAf,UACG,sBAAMA,UAAU,mBAAhB,SACG,mBAAGA,UAAU,kBAEhB,yBACGA,UAAU,cACV4E,MAAOpC,KAAKzC,MAAM0I,SAClB1D,SAAQ,uCAAE,WAAOV,GAAP,SAAAjD,EAAA,sEACD,EAAKqD,SAAS,CACjBgE,SAAU1C,OAAOC,SAAS3B,EAAEM,OAAOC,SAF/B,OAIP,EAAKiH,YAJE,2CAAF,sDAHX,UAUG,wBAAQ1F,UAAQ,EAAC4D,UAAQ,EAAzB,iDAGCvH,KAAKzC,MAAM0C,QAAQE,KAAI,SAACZ,GAAD,OACrB,yBAAwB6C,MAAO7C,EAAOL,GAAtC,iBACQK,EAAOL,GADf,YAC4BK,EAAOiB,OADtBjB,EAAOL,aAM7B,sBAAK1B,UAAU,0BAAf,UACG,sBAAMA,UAAU,mBAAhB,oCACA,uBACGA,UAAU,eACV2F,UAAQ,EACRrC,KAAK,iBACLsB,MAAOpC,KAAKzC,MAAM8I,MAClB9D,SAAQ,uCAAE,WAAOV,GAAP,SAAAjD,EAAA,sEACD,EAAKqD,SAAS,CAAEoE,MAAOxE,EAAEM,OAAOC,QAD/B,OAEP,EAAKiH,YAFE,2CAAF,2DAMd,sBAAK7L,UAAU,0BAAf,UACG,sBAAMA,UAAU,mBAAhB,8BACA,uBACGA,UAAU,eACV2F,UAAQ,EACRrC,KAAK,iBACLsB,MAAOpC,KAAKzC,MAAM+I,IAClB/D,SAAQ,uCAAE,WAAOV,GAAP,SAAAjD,EAAA,sEACD,EAAKqD,SAAS,CAAEqE,IAAKzE,EAAEM,OAAOC,QAD7B,OAEP,EAAKiH,YAFE,2CAAF,iEAQpB,cAAC,GAAD,CAAWxC,QAAS7G,KAAKzC,MAAMsJ,oB,GAlFX/I,IAAMC,WCmBzCuL,iBACG,cAAC,aAAD,UACG,cAAC,IAAD,UACG,eAAC,IAAD,WACG,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzL,IACjC,cAAC,IAAD,CAAOuL,OAAK,EAACC,KAAK,WAAWC,UAAWC,IACxC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,cAAcC,UAAWvG,IAC3C,cAAC,IAAD,CAAOqG,OAAK,EAACC,KAAK,mBAAmBC,UAAWE,IAChD,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,YAAYC,UAAW3E,IACzC,cAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,gBAAgBC,UAAWzE,IAC7C,cAAC,IAAD,CAAOuE,OAAK,EAACC,KAAK,qBAAqBC,UAAWtE,IAClD,cAAC,IAAD,CACGoE,OAAK,EACLC,KAAK,uBACLC,UAAWpE,IAEd,cAAC,IAAD,CAAOkE,OAAK,EAACC,KAAK,cAAcC,UAAW1C,KAC3C,cAAC,IAAD,CAAOwC,OAAK,EAACC,KAAK,mBAAmBC,UAAWvC,KAChD,cAAC,IAAD,CACGqC,OAAK,EACLC,KAAK,qCACLC,UAAW9B,KAEd,cAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,kBAAkBC,UAAW5B,KAC/C,cAAC,IAAD,CACG0B,OAAK,EACLC,KAAK,mCACLC,UAAWzB,KAEd,cAAC,IAAD,CACGuB,OAAK,EACLC,KAAK,yBACLC,UAAWjB,KAEd,cAAC,IAAD,CACGe,OAAK,EACLC,KAAK,6BACLC,UAAWG,KAEd,cAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,iBAAiBC,UAAWR,KAC9C,cAAC,IAAD,CACGM,OAAK,EACLC,KAAK,yBACLC,UAAWL,KAEd,cAAC,IAAD,CACGG,OAAK,EACLC,KAAK,6BACLC,UAAWP,KAEd,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,mBAAmBC,UAAWd,KAChD,cAAC,IAAD,CAAOa,KAAK,OAAOC,UAAWf,KAC9B,cAAC,IAAD,CAAUmB,GAAG,gBAItBxH,SAASyH,eAAe,W","file":"static/js/main.207e0311.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg_body\":\"HomeStyle_bg_body__geYuF\",\"showcase\":\"HomeStyle_showcase__25uKS\",\"content\":\"HomeStyle_content__YcolQ\",\"logo\":\"HomeStyle_logo__1PlG8\",\"title\":\"HomeStyle_title__184lQ\",\"text\":\"HomeStyle_text__1_1jp\",\"container\":\"HomeStyle_container__eh6sc\",\"grid_3\":\"HomeStyle_grid_3__1AOnF\",\"grid-2\":\"HomeStyle_grid-2__1DUii\",\"center\":\"HomeStyle_center__3O5RE\",\"bg-light\":\"HomeStyle_bg-light___z1Ik\",\"bg-dark\":\"HomeStyle_bg-dark__2x3dE\",\"services\":\"HomeStyle_services__2NvuV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NavStyle_container__11i-v\",\"red\":\"NavStyle_red__12tFJ\",\"purple\":\"NavStyle_purple__150R1\",\"indigo\":\"NavStyle_indigo__1nMax\",\"blue\":\"NavStyle_blue__3NcGJ\",\"cyan\":\"NavStyle_cyan__1i1z1\",\"teal\":\"NavStyle_teal__2iEoH\",\"green\":\"NavStyle_green__2kUnp\",\"lightGreen\":\"NavStyle_lightGreen__29iSJ\",\"lime\":\"NavStyle_lime__1QZTf\",\"yellow\":\"NavStyle_yellow__23OTs\",\"amber\":\"NavStyle_amber__2J1mC\",\"orange\":\"NavStyle_orange__2PMKQ\",\"deepOrange\":\"NavStyle_deepOrange__14Zaj\",\"brown\":\"NavStyle_brown__1roey\",\"gray\":\"NavStyle_gray__gvKDm\",\"topBotomBordersOut\":\"NavStyle_topBotomBordersOut__2mc8r\",\"topBotomBordersIn\":\"NavStyle_topBotomBordersIn__30A7B\",\"topLeftBorders\":\"NavStyle_topLeftBorders__1P9aq\",\"circleBehind\":\"NavStyle_circleBehind__TLe5k\",\"brackets\":\"NavStyle_brackets__1P3fe\",\"borderYtoX\":\"NavStyle_borderYtoX__39z_7\",\"borderXwidth\":\"NavStyle_borderXwidth__1D_Nc\",\"pullDown\":\"NavStyle_pullDown__1wsK_\",\"pullUp\":\"NavStyle_pullUp__3MZqu\",\"pullRight\":\"NavStyle_pullRight__35IC7\",\"pullLeft\":\"NavStyle_pullLeft__mv0II\",\"pullUpDown\":\"NavStyle_pullUpDown__3AGMK\",\"pullRightLeft\":\"NavStyle_pullRightLeft__1bmbG\",\"highlightTextOut\":\"NavStyle_highlightTextOut__3yECQ\",\"highlightTextIn\":\"NavStyle_highlightTextIn__14dME\"};","import React from \"react\";\r\nimport style from \"../styles/NavStyle.module.css\";\r\n\r\nclass Navigation extends React.Component {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {};\r\n   }\r\n   render() {\r\n      return (\r\n         <div\r\n            className={`${style.container} ${style.green} ${style.borderXwidth}`}\r\n         >\r\n            <a href=\"/\">Trang chủ</a>\r\n            <a href=\"/client\">Khách hàng</a>\r\n            <a href=\"/employee\">Nhân viên</a>\r\n            <div className=\"drop-menu\">\r\n               {/* eslint-disable-next-line */}\r\n               <a className=\"drop-btn\">\r\n                  Thống kê <i className=\"fas fa-caret-right ml-2\"></i>\r\n               </a>\r\n               <ul className=\"dropdown-menu\">\r\n                  <li>\r\n                     <a className=\"dropdown-item\" href=\"/statistic/transaction\">\r\n                        Giao dịch\r\n                     </a>\r\n                  </li>\r\n                  <li>\r\n                     <a\r\n                        className=\"dropdown-item\"\r\n                        href=\"/statistic/account-in-debt\"\r\n                     >\r\n                        Những tài khoản tín dụng còn nợ\r\n                     </a>\r\n                  </li>\r\n                  <li>\r\n                     <a className=\"dropdown-item\" href=\"/statistic/top10\">\r\n                        Top 10 khách hàng gửi tiền nhiều nhất\r\n                     </a>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport Nav from \"../../components/Navigation\";\r\nimport style from \"../../styles/HomeStyle.module.css\";\r\n\r\nclass Home extends React.Component {\r\n   render() {\r\n      return (\r\n         <div className={style.bg_body}>\r\n            <Nav />\r\n            <header className={style.showcase}>\r\n               <div className={style.content}>\r\n                  <img\r\n                     src=\"/resources/image/develop.svg\"\r\n                     className={style.logo}\r\n                     alt=\"Traversy Media\"\r\n                  />\r\n                  <div className={style.title}>Let's learn with me</div>\r\n                  <div className={style.text}>\r\n                     Dốt đến đâu học lâu cũng biết\r\n                  </div>\r\n               </div>\r\n            </header>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Home;\r\n","export const config = {\r\n   API_URL:\r\n      \"http://bankmanagement-env.eba-tjsvbuhh.ap-southeast-1.elasticbeanstalk.com\",\r\n};\r\n","import { config } from \"./config\";\r\n\r\nconst API_URL = config.API_URL + \"/client/\";\r\n\r\nexport const getAllClient = async () => {\r\n   const rawData = await fetch(API_URL);\r\n   if (rawData.status === 200) return rawData.json();\r\n   return [];\r\n};\r\n\r\nexport const getClientByID = async (id: any) => {\r\n   const rawData = await fetch(API_URL + id);\r\n   if (rawData.status === 200) return rawData.json();\r\n   return {};\r\n};\r\n\r\nexport const searchClient = async (keyword: string) => {\r\n   const rawData = await fetch(API_URL + \"search/\" + keyword);\r\n   if (rawData.status === 200) return rawData.json();\r\n   return [];\r\n};\r\n\r\nexport const getTop10Client = async () => {\r\n   const rawData = await fetch(API_URL + \"topTen\");\r\n   if (rawData.status === 200) return rawData.json();\r\n   return [];\r\n};\r\n\r\nexport const updateClient = async (client: any) => {\r\n   const rawData = await fetch(API_URL + client.id, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(client),\r\n   });\r\n   return rawData;\r\n};\r\n\r\nexport const deleteClient = async (id: number) => {\r\n   const rawData = await fetch(API_URL + id, {\r\n      method: \"DELETE\",\r\n   });\r\n   return rawData;\r\n};\r\n\r\nexport const insertClient = async (client: object) => {\r\n   const rawData = await fetch(API_URL, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(client),\r\n   });\r\n   return rawData;\r\n};\r\n","import React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { deleteClient } from \"../../api/ClientAPI\";\r\n\r\ninterface IProps {\r\n   clients: [];\r\n}\r\n\r\ninterface IState {}\r\n\r\nclass TblClient extends React.Component<IProps, IState> {\r\n   constructor(props: IProps) {\r\n      super(props);\r\n      this.state = {};\r\n   }\r\n   componentDidMount() {}\r\n   render() {\r\n      if (this.props.clients.length === 0) {\r\n         return <h3>Không tìm thấy khách hàng</h3>;\r\n      } else {\r\n         return (\r\n            <table className=\"table table-hover\">\r\n               <thead className=\"bg-gray\">\r\n                  <tr>\r\n                     <th>ID</th>\r\n                     <th>CMT</th>\r\n                     <th>Họ tên</th>\r\n                     <th>Ngày sinh</th>\r\n                     <th>Địa chỉ</th>\r\n                     <th>Chức năng</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {this.props.clients.map((client: any) => (\r\n                     <tr key={client.id}>\r\n                        <th\r\n                           onClick={() =>\r\n                              (window.location.href = `/client/${client.id}`)\r\n                           }\r\n                        >\r\n                           {client.id}\r\n                        </th>\r\n                        <td\r\n                           onClick={() =>\r\n                              (window.location.href = `/client/${client.id}`)\r\n                           }\r\n                        >\r\n                           {client.identityCard}\r\n                        </td>\r\n                        <td\r\n                           onClick={() =>\r\n                              (window.location.href = `/client/${client.id}`)\r\n                           }\r\n                        >\r\n                           {client.name}\r\n                        </td>\r\n                        <td\r\n                           onClick={() =>\r\n                              (window.location.href = `/client/${client.id}`)\r\n                           }\r\n                        >\r\n                           {new Date(client.dateOfBirth).toDateString()}\r\n                        </td>\r\n                        <td\r\n                           onClick={() =>\r\n                              (window.location.href = `/client/${client.id}`)\r\n                           }\r\n                        >\r\n                           {client.address}\r\n                        </td>\r\n                        <td>\r\n                           <form\r\n                              action={`/client/edit/${client.id}`}\r\n                              method=\"GET\"\r\n                           >\r\n                              <button className=\"btn btn-warning\">Sửa</button>\r\n                           </form>\r\n                           <button\r\n                              className=\"btn btn-dark ml-3\"\r\n                              type=\"button\"\r\n                              onClick={() => clickDelete(client.id)}\r\n                           >\r\n                              Xoá\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         );\r\n      }\r\n   }\r\n}\r\n\r\nexport default TblClient;\r\n\r\nconst clickDelete = (id: number) => {\r\n   Swal.fire({\r\n      title: \"Bạn có chắc muốn xoá không?\",\r\n      text: \"Bạn sẽ không thể quay lại!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Có, hãy xoá nó!\",\r\n   }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n         const isDelete = await deleteClient(id);\r\n         if (isDelete.status === 200) {\r\n            window.location.reload();\r\n         } else {\r\n            Swal.fire(\"Xoá không thành công\", \"\", \"error\");\r\n         }\r\n      }\r\n   });\r\n};\r\n","import React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\n//import components\r\nimport TblClient from \"./TblClient\";\r\nimport Nav from \"../../components/Navigation\";\r\n// import call api\r\nimport { getAllClient, searchClient } from \"../../api/ClientAPI\";\r\n\r\ninterface IProps {}\r\n\r\ninterface IState {\r\n   keyword: string;\r\n   clients: [];\r\n}\r\n\r\nclass ClientPage extends React.Component<IProps, IState> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {\r\n         keyword: \"\",\r\n         clients: [],\r\n      };\r\n   }\r\n\r\n   UNSAFE_componentWillMount() {\r\n      //set title\r\n      document.title = \"Bank | Client\";\r\n   }\r\n\r\n   async componentDidMount() {\r\n      const clients = await getAllClient();\r\n      this.setState({ clients: clients });\r\n   }\r\n\r\n   submitHandle = (e: React.FormEvent | React.MouseEvent) => {\r\n      e.preventDefault();\r\n      if (this.state.keyword === \"\") {\r\n         Toast.fire({\r\n            icon: \"error\",\r\n            title: \"Bạn chưa nhập tên khách hàng\",\r\n         });\r\n      } else {\r\n         searchClient(this.state.keyword).then((data) =>\r\n            this.setState({ clients: data }),\r\n         );\r\n      }\r\n   };\r\n\r\n   inputHandle = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      await this.setState({ keyword: e.target.value });\r\n      if (this.state.keyword && this.state.keyword !== \" \") {\r\n         searchClient(this.state.keyword).then((data) =>\r\n            this.setState({ clients: data }),\r\n         );\r\n      } else {\r\n         getAllClient().then((data) => this.setState({ clients: data }));\r\n      }\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Nav />\r\n            <div className=\"container\">\r\n               <div className=\"row mt-4 bg-white content pt-3 pb-3\">\r\n                  <div className=\"text-center mb-3\">\r\n                     <h1>Thông tin khách hàng</h1>\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-center mb-3\">\r\n                     <div className=\"input-group w-50 mr-5\">\r\n                        <span className=\"input-group-text\">\r\n                           <i className=\"fas fa-search\"></i>\r\n                        </span>\r\n                        <input\r\n                           className=\"form-control\"\r\n                           type=\"search\"\r\n                           placeholder=\"Nhập tên khách hàng\"\r\n                           name=\"keyword\"\r\n                           value={this.state.keyword}\r\n                           onChange={(e) => this.inputHandle(e)}\r\n                        />\r\n                     </div>\r\n                     <a className=\"btn btn-success\" href=\"/client/add\">\r\n                        Thêm khách hàng\r\n                     </a>\r\n                  </div>\r\n                  <TblClient clients={this.state.clients} />\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default ClientPage;\r\n\r\nconst Toast = Swal.mixin({\r\n   toast: true,\r\n   position: \"top-end\",\r\n   showConfirmButton: false,\r\n   timer: 3000,\r\n   timerProgressBar: true,\r\n   didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n   },\r\n});\r\n","import React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { insertClient } from \"../../api/ClientAPI\";\r\n\r\ninterface IProps {}\r\n\r\ninterface IState {\r\n   client: {\r\n      id: number;\r\n      identityCard: string;\r\n      name: string;\r\n      dateOfBirth: string;\r\n      address: string;\r\n   };\r\n}\r\n\r\nclass ClientAdd extends React.Component<IProps, IState> {\r\n   constructor(props: IProps) {\r\n      super(props);\r\n      this.state = {\r\n         client: {\r\n            id: 0,\r\n            identityCard: \"\",\r\n            name: \"\",\r\n            dateOfBirth: \"\",\r\n            address: \"\",\r\n         },\r\n      };\r\n   }\r\n\r\n   componentWillMount() {\r\n      document.title = \"Bank | Add Client\";\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"form-infor\">\r\n            <h2 className=\"title\">Thêm khách hàng</h2>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-passport\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  required\r\n                  placeholder=\"Chứng minh thư\"\r\n                  value={this.state.client.identityCard}\r\n                  onChange={(e) => {\r\n                     let newClient: any = this.state.client;\r\n                     newClient.identityCard = e.target.value;\r\n                     this.setState({ client: newClient });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-signature\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  required\r\n                  placeholder=\"Họ tên\"\r\n                  value={(this.state.client as any).name}\r\n                  onChange={(e) => {\r\n                     let newClient: any = this.state.client;\r\n                     newClient.name = e.target.value;\r\n                     this.setState({ client: newClient });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-birthday-cake\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  required\r\n                  type=\"date\"\r\n                  value={(this.state.client as any).dateOfBirth}\r\n                  onChange={(e) => {\r\n                     let newClient: any = this.state.client;\r\n                     newClient.dateOfBirth = e.target.value;\r\n                     this.setState({ client: newClient });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-map-marked-alt\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  required\r\n                  placeholder=\"Địa chỉ\"\r\n                  value={(this.state.client as any).address}\r\n                  onChange={(e) => {\r\n                     let newClient: any = this.state.client;\r\n                     newClient.address = e.target.value;\r\n                     this.setState({ client: newClient });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"action\">\r\n               <button\r\n                  className=\"btn btn-success\"\r\n                  onClick={() => clickAdd(this.state.client)}\r\n               >\r\n                  Thêm\r\n               </button>\r\n               <a className=\"btn btn-dark\" href=\"/client\">\r\n                  Huỷ\r\n               </a>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default ClientAdd;\r\n\r\nconst clickAdd = async (client: object) => {\r\n   const isInsert = await insertClient(client);\r\n   if (isInsert.status === 201) window.location.href = \"/client\";\r\n   else Swal.fire(\"Thêm không thành công\", \"\", \"error\");\r\n};\r\n","import React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\n//import call api\r\nimport { getClientByID, updateClient } from \"../../api/ClientAPI\";\r\n\r\ninterface IProps {\r\n   match: { params: { id: string } };\r\n}\r\n\r\ninterface IState {\r\n   client: object;\r\n}\r\n\r\nclass ClientEditPage extends React.Component<IProps, IState> {\r\n   constructor(props: IProps) {\r\n      super(props);\r\n      this.state = {\r\n         client: {},\r\n      };\r\n   }\r\n\r\n   componentWillMount() {\r\n      document.title = \"Bank | Edit Client\";\r\n   }\r\n\r\n   componentDidMount() {\r\n      getClientByID(Number.parseInt(this.props.match.params.id)).then((data) =>\r\n         this.setState({ client: data }),\r\n      );\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"form-infor\">\r\n            <h2 className=\"title\">Sửa thông tin khách hàng</h2>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-id-card\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  required\r\n                  disabled\r\n                  placeholder=\"Mã khách hàng\"\r\n                  value={(this.state.client as any).id}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-passport\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  required\r\n                  placeholder=\"Chứng minh thư\"\r\n                  value={(this.state.client as any).identityCard}\r\n                  onChange={(e) => {\r\n                     let newClient: any = this.state.client;\r\n                     newClient.identityCard = e.target.value;\r\n                     this.setState({ client: newClient });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-signature\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  required\r\n                  placeholder=\"Họ tên\"\r\n                  value={(this.state.client as any).name}\r\n                  onChange={(e) => {\r\n                     let newClient: any = this.state.client;\r\n                     newClient.name = e.target.value;\r\n                     this.setState({ client: newClient });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-birthday-cake\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  required\r\n                  type=\"date\"\r\n                  value={(this.state.client as any).dateOfBirth}\r\n                  onChange={(e) => {\r\n                     let newClient: any = this.state.client;\r\n                     newClient.dateOfBirth = e.target.value;\r\n                     this.setState({ client: newClient });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-map-marked-alt\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  required\r\n                  placeholder=\"Địa chỉ\"\r\n                  value={(this.state.client as any).address}\r\n                  onChange={(e) => {\r\n                     let newClient: any = this.state.client;\r\n                     newClient.address = e.target.value;\r\n                     this.setState({ client: newClient });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"action\">\r\n               <button\r\n                  className=\"btn btn-success\"\r\n                  onClick={(e) => clickSave(this.state.client)}\r\n               >\r\n                  Lưu\r\n               </button>\r\n               <a className=\"btn btn-dark\" href=\"/client\">\r\n                  Huỷ\r\n               </a>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default ClientEditPage;\r\n\r\nconst clickSave = async (client: object) => {\r\n   const isSave = await updateClient(client);\r\n   if (isSave.status === 200) window.location.href = \"/client\";\r\n   else Swal.fire(\"Sửa không thành công\", \"\", \"error\");\r\n};\r\n","import { config } from \"./config\";\r\n\r\nconst API_URL = config.API_URL + \"/employee/\";\r\n\r\nexport const getAllEmployee = async () => {\r\n   const rawData = await fetch(API_URL);\r\n   if (rawData.status === 200) return rawData.json();\r\n   return [];\r\n};\r\n\r\nexport const getEmployeeByID = async (id: number) => {\r\n   const rawData = await fetch(API_URL + id);\r\n   if (rawData.status === 200) return rawData.json();\r\n   return {};\r\n};\r\n\r\nexport const searchEmployee = async (keyword: string) => {\r\n   const rawData = await fetch(API_URL + \"search/\" + keyword);\r\n   if (rawData.status === 200) return rawData.json();\r\n   return [];\r\n};\r\n\r\nexport const getEmployeeSalary = async (id: any, time: any) => {\r\n   const rawData = await fetch(\r\n      API_URL + `calculateSalary?id_employee=${id}&month=${time}`,\r\n   );\r\n   if (rawData.status === 200) {\r\n      const salary = await rawData.json();\r\n      return salary.salary;\r\n   }\r\n   return NaN;\r\n};\r\n\r\nexport const updateEmployee = async (employee: any) => {\r\n   const rawData = await fetch(API_URL + employee.id, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(employee),\r\n   });\r\n   return rawData;\r\n};\r\n\r\nexport const deleteEmployee = async (id: number) => {\r\n   const rawData = await fetch(API_URL + id, {\r\n      method: \"DELETE\",\r\n   });\r\n   return rawData;\r\n};\r\n\r\nexport const insertEmployee = async (employee: object) => {\r\n   const rawData = await fetch(API_URL, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(employee),\r\n   });\r\n   return rawData;\r\n};\r\n","import React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { deleteEmployee } from \"../../api/EmployeeAPI\";\r\n\r\nclass TblEmployee extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {};\r\n   }\r\n\r\n   async _deleteHandle(id: any) {\r\n      Swal.fire({\r\n         title: \"Bạn có chắc muốn xoá không?\",\r\n         text: \"Bạn sẽ không thể quay lại!\",\r\n         icon: \"warning\",\r\n         showCancelButton: true,\r\n         confirmButtonColor: \"#3085d6\",\r\n         cancelButtonColor: \"#d33\",\r\n         confirmButtonText: \"Có, hãy xoá nó!\",\r\n      }).then(async (result) => {\r\n         if (result.isConfirmed) {\r\n            const isDelete = await deleteEmployee(id);\r\n            if (isDelete.status === 200) {\r\n               window.location.href = \"/employee\";\r\n            } else {\r\n               Swal.fire(\"Xoá không thành công\", \"\", \"error\");\r\n            }\r\n         }\r\n      });\r\n   }\r\n\r\n   render() {\r\n      if (this.props.employees.length === 0)\r\n         return <h3>Không tìm thấy nhân viên</h3>;\r\n      else\r\n         return (\r\n            <table className=\"table table-hover\">\r\n               <thead className=\"bg-gray\">\r\n                  <tr>\r\n                     <th>ID</th>\r\n                     <th>CMT</th>\r\n                     <th>Họ tên</th>\r\n                     <th>Ngày sinh</th>\r\n                     <th>Địa chỉ</th>\r\n                     <th>Bậc nghề</th>\r\n                     <th>Kinh nghiệm</th>\r\n                     <th>Vị trí</th>\r\n                     <th>Chức năng</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {this.props.employees.map((employee: any) => (\r\n                     <tr key={employee.id}>\r\n                        <th\r\n                           onClick={() =>\r\n                              (window.location.href = `/employee/salary/${employee.id}`)\r\n                           }\r\n                        >\r\n                           {employee.id}\r\n                        </th>\r\n                        <td\r\n                           onClick={() =>\r\n                              (window.location.href = `/employee/salary/${employee.id}`)\r\n                           }\r\n                        >\r\n                           {employee.identityCard}\r\n                        </td>\r\n                        <td\r\n                           onClick={() =>\r\n                              (window.location.href = `/employee/salary/${employee.id}`)\r\n                           }\r\n                        >\r\n                           {employee.name}\r\n                        </td>\r\n                        <td\r\n                           onClick={() =>\r\n                              (window.location.href = `/employee/salary/${employee.id}`)\r\n                           }\r\n                        >\r\n                           {new Date(employee.dateOfBirth).toDateString()}\r\n                        </td>\r\n                        <td\r\n                           onClick={() =>\r\n                              (window.location.href = `/employee/salary/${employee.id}`)\r\n                           }\r\n                        >\r\n                           {employee.address}\r\n                        </td>\r\n                        <td\r\n                           onClick={() =>\r\n                              (window.location.href = `/employee/salary/${employee.id}`)\r\n                           }\r\n                        >\r\n                           {employee.level}\r\n                        </td>\r\n                        <td\r\n                           onClick={() =>\r\n                              (window.location.href = `/employee/salary/${employee.id}`)\r\n                           }\r\n                        >\r\n                           {employee.experience}\r\n                        </td>\r\n                        <td\r\n                           onClick={() =>\r\n                              (window.location.href = `/employee/salary/${employee.id}`)\r\n                           }\r\n                        >\r\n                           {employee.position}\r\n                        </td>\r\n                        <td>\r\n                           <form\r\n                              action={`/employee/edit/${employee.id}`}\r\n                              method=\"GET\"\r\n                           >\r\n                              <button className=\"btn btn-warning\">Sửa</button>\r\n                           </form>\r\n                           <button\r\n                              className=\"btn btn-dark ml-3\"\r\n                              type=\"button\"\r\n                              onClick={this._deleteHandle.bind(\r\n                                 this,\r\n                                 employee.id as number,\r\n                              )}\r\n                           >\r\n                              Xoá\r\n                           </button>\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         );\r\n   }\r\n}\r\n\r\nexport default TblEmployee;\r\n","import React from \"react\";\r\nimport TblEmployee from \"./TblEmployee\";\r\nimport Nav from \"../../components/Navigation\";\r\nimport { getAllEmployee, searchEmployee } from \"../../api/EmployeeAPI\";\r\n\r\nclass Employee extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {\r\n         keyword: \"\",\r\n         employees: [],\r\n      };\r\n   }\r\n\r\n   componentWillMount() {\r\n      document.title = \"Bank | Employee\";\r\n   }\r\n\r\n   async componentDidMount() {\r\n      const employees = await getAllEmployee();\r\n      this.setState({ employees: employees });\r\n   }\r\n\r\n   async _inpHandle(e: React.ChangeEvent<HTMLInputElement>) {\r\n      await this.setState({ keyword: e.target.value });\r\n      if (this.state.keyword && this.state.keyword !== \" \") {\r\n         searchEmployee(this.state.keyword).then((data) =>\r\n            this.setState({ employees: data }),\r\n         );\r\n      } else {\r\n         getAllEmployee().then((data) => this.setState({ employees: data }));\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Nav />\r\n            <div className=\"w-75 mx-auto\">\r\n               <div className=\"row mt-4 bg-white content pt-3 pb-3\">\r\n                  <div className=\"text-center mb-3\">\r\n                     <h1>Thông tin nhân viên</h1>\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-center mb-3\">\r\n                     <div className=\"input-group w-50 mr-5\">\r\n                        <span className=\"input-group-text\">\r\n                           <i className=\"fas fa-search\"></i>\r\n                        </span>\r\n                        <input\r\n                           className=\"form-control\"\r\n                           type=\"search\"\r\n                           placeholder=\"Nhập tên nhân viên\"\r\n                           value={this.state.keyword}\r\n                           onChange={(e) => this._inpHandle(e)}\r\n                        />\r\n                     </div>\r\n                     <a className=\"btn btn-success\" href=\"/employee/add\">\r\n                        Thêm Nhân viên\r\n                     </a>\r\n                  </div>\r\n                  <TblEmployee employees={this.state.employees} />\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Employee;\r\n","import React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { insertEmployee } from \"../../api/EmployeeAPI\";\r\n\r\nclass EmployeeAdd extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {\r\n         employee: {},\r\n      };\r\n   }\r\n\r\n   componentWillMount() {\r\n      document.title = \"Bank | Add Employee\";\r\n   }\r\n\r\n   async _clickHandle() {\r\n      const isAdd = await insertEmployee(this.state.employee);\r\n      if (isAdd.status === 201) window.location.href = \"/employee\";\r\n      else Swal.fire(\"Thêm không thành công\", \"\", \"error\");\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"form-infor\">\r\n            <h2 className=\"title\">Thông tin nhân viên</h2>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-passport\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  required\r\n                  placeholder=\"Chứng minh thư\"\r\n                  value={this.state.employee.identityCard}\r\n                  onChange={(e) => {\r\n                     let newEmployee = this.state.employee;\r\n                     newEmployee.identityCard = e.target.value;\r\n                     this.setState({ employee: newEmployee });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-signature\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  required\r\n                  placeholder=\"Họ tên\"\r\n                  value={this.state.employee.name}\r\n                  onChange={(e) => {\r\n                     let newEmployee = this.state.employee;\r\n                     newEmployee.name = e.target.value;\r\n                     this.setState({ employee: newEmployee });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-birthday-cake\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  required\r\n                  type=\"date\"\r\n                  value={this.state.employee.dateOfBirth}\r\n                  onChange={(e) => {\r\n                     let newEmployee = this.state.employee;\r\n                     newEmployee.dateOfBirth = e.target.value;\r\n                     this.setState({ employee: newEmployee });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-map-marked-alt\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  required\r\n                  placeholder=\"Địa chỉ\"\r\n                  value={this.state.employee.address}\r\n                  onChange={(e) => {\r\n                     let newEmployee = this.state.employee;\r\n                     newEmployee.address = e.target.value;\r\n                     this.setState({ employee: newEmployee });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fab fa-codepen\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  required\r\n                  placeholder=\"Bậc nghề\"\r\n                  value={this.state.employee.level}\r\n                  onChange={(e) => {\r\n                     let newEmployee = this.state.employee;\r\n                     newEmployee.level = e.target.value;\r\n                     this.setState({ employee: newEmployee });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-dollar-sign\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  required\r\n                  placeholder=\"Thâm niên\"\r\n                  value={this.state.employee.experience}\r\n                  onChange={(e) => {\r\n                     let newEmployee: any = this.state.employee;\r\n                     newEmployee.experience = e.target.value;\r\n                     this.setState({ employee: newEmployee });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-chair\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  required\r\n                  placeholder=\"Vị trí công việc\"\r\n                  value={this.state.employee.position}\r\n                  onChange={(e) => {\r\n                     let newEmployee = this.state.employee;\r\n                     newEmployee.position = e.target.value;\r\n                     this.setState({ employee: newEmployee });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"action\">\r\n               <button\r\n                  className=\"btn btn-success\"\r\n                  onClick={this._clickHandle.bind(this)}\r\n               >\r\n                  Thêm\r\n               </button>\r\n               <a className=\"btn btn-dark\" href=\"/employee\">\r\n                  Huỷ\r\n               </a>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default EmployeeAdd;\r\n","import React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getEmployeeByID, updateEmployee } from \"../../api/EmployeeAPI\";\r\n\r\nclass EmployeeEdit extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {\r\n         employee: {},\r\n      };\r\n   }\r\n\r\n   componentWillMount() {\r\n      document.title = \"Bank | Edit Employee\";\r\n   }\r\n\r\n   async componentDidMount() {\r\n      const employee = await getEmployeeByID(\r\n         this.props.match.params.id as number,\r\n      );\r\n      this.setState({ employee: employee });\r\n   }\r\n\r\n   async _saveHandle() {\r\n      const isSave = await updateEmployee(this.state.employee);\r\n      if (isSave.status === 200) window.location.href = \"/employee\";\r\n      else Swal.fire(\"Lưu không thành công\", \"\", \"error\");\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"form-infor\">\r\n            <h2 className=\"title\">Sửa thông tin nhân viên</h2>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-id-card\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  disabled\r\n                  placeholder=\"Mã nhân viên\"\r\n                  value={this.state.employee.id}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-passport\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Chứng minh thư\"\r\n                  value={this.state.employee.identityCard}\r\n                  onChange={(e) => {\r\n                     let newEmployee = this.state.employee;\r\n                     newEmployee.identityCard = e.target.value;\r\n                     this.setState({ employee: newEmployee });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-signature\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Họ tên\"\r\n                  value={this.state.employee.name}\r\n                  onChange={(e) => {\r\n                     let newEmployee = this.state.employee;\r\n                     newEmployee.name = e.target.value;\r\n                     this.setState({ employee: newEmployee });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-birthday-cake\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  value={this.state.employee.dateOfBirth}\r\n                  onChange={(e) => {\r\n                     let newEmployee = this.state.employee;\r\n                     newEmployee.dateOfBirth = e.target.value;\r\n                     this.setState({ employee: newEmployee });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-map-marked-alt\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Địa chỉ\"\r\n                  value={this.state.employee.address}\r\n                  onChange={(e) => {\r\n                     let newEmployee = this.state.employee;\r\n                     newEmployee.address = e.target.value;\r\n                     this.setState({ employee: newEmployee });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fab fa-codepen\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Bậc nghề\"\r\n                  value={this.state.employee.level}\r\n                  onChange={(e) => {\r\n                     let newEmployee = this.state.employee;\r\n                     newEmployee.level = e.target.value;\r\n                     this.setState({ employee: newEmployee });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-dollar-sign\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Thâm niên\"\r\n                  value={this.state.employee.experience}\r\n                  onChange={(e) => {\r\n                     let newEmployee: any = this.state.employee;\r\n                     newEmployee.experience = e.target.value;\r\n                     this.setState({ employee: newEmployee });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-chair\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Vị trí công việc\"\r\n                  value={this.state.employee.position}\r\n                  onChange={(e) => {\r\n                     let newEmployee = this.state.employee;\r\n                     newEmployee.position = e.target.value;\r\n                     this.setState({ employee: newEmployee });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"action\">\r\n               <button\r\n                  className=\"btn btn-success\"\r\n                  onClick={this._saveHandle.bind(this)}\r\n               >\r\n                  Lưu\r\n               </button>\r\n               <a className=\"btn btn-dark\" href=\"/employee\">\r\n                  Huỷ\r\n               </a>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default EmployeeEdit;\r\n","import React from \"react\";\r\nimport { getEmployeeByID, getEmployeeSalary } from \"../../api/EmployeeAPI\";\r\n\r\nclass EmployeeSalary extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {\r\n         salary: NaN,\r\n         time: \"\",\r\n         employee: {},\r\n      };\r\n   }\r\n\r\n   async componentDidMount() {\r\n      const employee = await getEmployeeByID(this.props.match.params.id);\r\n      this.setState({ employee: employee });\r\n   }\r\n\r\n   async _clickHandle() {\r\n      const salary = await getEmployeeSalary(\r\n         this.props.match.params.id,\r\n         this.state.time,\r\n      );\r\n      this.setState({ salary: salary });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"form-infor\">\r\n            <h2 className=\"title\">\r\n               Tính lương nhân viên: {this.state.employee.name}\r\n            </h2>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"far fa-calendar-alt\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nhập tháng\"\r\n                  value={this.state.time}\r\n                  onChange={(e) => this.setState({ time: e.target.value })}\r\n               />\r\n               <span className=\"input-group-text\">MM-yyyy</span>\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text form-control\">\r\n                  Tiền lương: {this.state.salary}\r\n               </span>\r\n            </div>\r\n            <div className=\"action\">\r\n               <button\r\n                  className=\"btn btn-success\"\r\n                  onClick={this._clickHandle.bind(this)}\r\n               >\r\n                  Xem lương\r\n               </button>\r\n               <a className=\"btn btn-dark\" href=\"/employee\">\r\n                  Quay lại\r\n               </a>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default EmployeeSalary;\r\n","import { config } from \"./config\";\r\n\r\nconst API_URL = config.API_URL + \"/depositAccount/\";\r\n\r\nexport const getAllDeposit = async () => {\r\n   const rawData = await fetch(API_URL);\r\n   if (rawData.status === 200) return rawData.json();\r\n   return [];\r\n};\r\n\r\nexport const getDepositByID = async (id: any) => {\r\n   const rawData = await fetch(API_URL + id);\r\n   if (rawData.status === 200) return rawData.json();\r\n   return {};\r\n};\r\n\r\nexport const updateDeposit = async (deposit: any) => {\r\n   const rawData = await fetch(API_URL + deposit.id, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(deposit),\r\n   });\r\n   return rawData;\r\n};\r\n\r\nexport const deleteDeposit = async (id: any) => {\r\n   const rawData = await fetch(API_URL + id, {\r\n      method: \"DELETE\",\r\n   });\r\n   return rawData;\r\n};\r\n\r\nexport const insertDeposit = async (deposit: object) => {\r\n   const rawData = await fetch(API_URL, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(deposit),\r\n   });\r\n   return rawData;\r\n};\r\n","import React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { deleteDeposit } from \"../../../api/DepositAPI\";\r\n\r\nclass TblDeposit extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {};\r\n   }\r\n\r\n   async _deleteHandle(id: any) {\r\n      Swal.fire({\r\n         title: \"Bạn có chắc muốn xoá không?\",\r\n         text: \"Bạn sẽ không thể quay lại!\",\r\n         icon: \"warning\",\r\n         showCancelButton: true,\r\n         confirmButtonColor: \"#3085d6\",\r\n         cancelButtonColor: \"#d33\",\r\n         confirmButtonText: \"Có, hãy xoá nó!\",\r\n      }).then(async (result) => {\r\n         if (result.isConfirmed) {\r\n            const isDelete = await deleteDeposit(id);\r\n            if (isDelete.status === 200) {\r\n               window.location.reload();\r\n            } else {\r\n               Swal.fire(\"Xoá không thành công\", \"\", \"error\");\r\n            }\r\n         }\r\n      });\r\n   }\r\n\r\n   render() {\r\n      if (this.props.deposits.length === 0)\r\n         return <h3>Không tìm thấy tài khoản gửi tiền</h3>;\r\n      else\r\n         return (\r\n            <div>\r\n               <table className=\"table table-hover\">\r\n                  <thead className=\"bg-gray\">\r\n                     <tr>\r\n                        <th>Mã số</th>\r\n                        <th>Loại</th>\r\n                        <th>Số dư</th>\r\n                        <th>Lãi suất hàng tháng</th>\r\n                        <th>Số dư tối thiểu</th>\r\n                        <th>Chức năng</th>\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {this.props.deposits.map((deposit: any) => (\r\n                        <tr key={deposit.id}>\r\n                           <th\r\n                              onClick={() =>\r\n                                 (window.location.href = `/transaction/deposit/${deposit.id}`)\r\n                              }\r\n                           >\r\n                              {deposit.id}\r\n                           </th>\r\n                           <td\r\n                              onClick={() =>\r\n                                 (window.location.href = `/transaction/deposit/${deposit.id}`)\r\n                              }\r\n                           >\r\n                              {deposit.type}\r\n                           </td>\r\n                           <td\r\n                              onClick={() =>\r\n                                 (window.location.href = `/transaction/deposit/${deposit.id}`)\r\n                              }\r\n                           >\r\n                              {deposit.balance}\r\n                           </td>\r\n                           <td\r\n                              onClick={() =>\r\n                                 (window.location.href = `/transaction/deposit/${deposit.id}`)\r\n                              }\r\n                           >\r\n                              {deposit.rate}%\r\n                           </td>\r\n                           <td\r\n                              onClick={() =>\r\n                                 (window.location.href = `/transaction/deposit/${deposit.id}`)\r\n                              }\r\n                           >\r\n                              {deposit.minBalance}\r\n                           </td>\r\n                           <td>\r\n                              <form\r\n                                 action={`/deposit/edit/${deposit.id}/${this.props.idClient}`}\r\n                                 method=\"GET\"\r\n                              >\r\n                                 <button className=\"btn btn-warning\">\r\n                                    Sửa\r\n                                 </button>\r\n                              </form>\r\n                              <button\r\n                                 className=\"btn btn-dark ml-3\"\r\n                                 onClick={this._deleteHandle.bind(\r\n                                    this,\r\n                                    deposit.id,\r\n                                 )}\r\n                              >\r\n                                 Xoá\r\n                              </button>\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         );\r\n   }\r\n}\r\n\r\nexport default TblDeposit;\r\n","import { config } from \"./config\";\r\n\r\nconst API_URL = config.API_URL + \"/creditAccount/\";\r\n\r\nexport const getAllCredit = async () => {\r\n   const rawData = await fetch(API_URL);\r\n   if (rawData.status === 200) return rawData.json();\r\n   return [];\r\n};\r\n\r\nexport const getCreditByID = async (id: any) => {\r\n   const rawData = await fetch(API_URL + id);\r\n   if (rawData.status === 200) return rawData.json();\r\n   return {};\r\n};\r\n\r\nexport const getByTimeTransaction = async (\r\n   idClient: any,\r\n   start: any,\r\n   end: any,\r\n) => {\r\n   const rawData = await fetch(\r\n      API_URL +\r\n         `getByTimeTransaction?end=${end}&id_client=${idClient}&start=${start}`,\r\n   );\r\n   if (rawData.status === 200) return rawData.json();\r\n   return [];\r\n};\r\n\r\nexport const getByBalance = async () => {\r\n   const rawData = await fetch(API_URL + \"getByBalance\");\r\n   if (rawData.status === 200) return rawData.json();\r\n   return [];\r\n};\r\n\r\nexport const updateCredit = async (credit: any) => {\r\n   const rawData = await fetch(API_URL + credit.id, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(credit),\r\n   });\r\n   return rawData;\r\n};\r\n\r\nexport const deleteCredit = async (id: any) => {\r\n   const rawData = await fetch(API_URL + id, {\r\n      method: \"DELETE\",\r\n   });\r\n   return rawData;\r\n};\r\n\r\nexport const insertCredit = async (credit: object) => {\r\n   const rawData = await fetch(API_URL, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(credit),\r\n   });\r\n   return rawData;\r\n};\r\n","import React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { deleteCredit } from \"../../../api/CreditAPI\";\r\n\r\nclass TblCredit extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {};\r\n   }\r\n\r\n   async _deleteHandle(id: any) {\r\n      Swal.fire({\r\n         title: \"Bạn có chắc muốn xoá không?\",\r\n         text: \"Bạn sẽ không thể quay lại!\",\r\n         icon: \"warning\",\r\n         showCancelButton: true,\r\n         confirmButtonColor: \"#3085d6\",\r\n         cancelButtonColor: \"#d33\",\r\n         confirmButtonText: \"Có, hãy xoá nó!\",\r\n      }).then(async (result) => {\r\n         if (result.isConfirmed) {\r\n            const isDelete = await deleteCredit(id);\r\n            if (isDelete.status === 200) {\r\n               window.location.reload();\r\n            } else {\r\n               Swal.fire(\"Xoá không thành công\", \"\", \"error\");\r\n            }\r\n         }\r\n      });\r\n   }\r\n\r\n   render() {\r\n      if (this.props.credits.length === 0)\r\n         return <h3>Không tìm thấy tài khoản tín dụng</h3>;\r\n      else\r\n         return (\r\n            <div>\r\n               <table className=\"table table-hover\">\r\n                  <thead className=\"bg-gray\">\r\n                     <tr>\r\n                        <th>Mã số</th>\r\n                        <th>Loại</th>\r\n                        <th>Số dư</th>\r\n                        <th>Hạn mức tín dụng</th>\r\n                        <th>Chức năng</th>\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {this.props.credits.map((credit: any) => (\r\n                        <tr key={credit.id}>\r\n                           <th\r\n                              onClick={() =>\r\n                                 (window.location.href = `/transaction/credit/${credit.id}`)\r\n                              }\r\n                           >\r\n                              {credit.id}\r\n                           </th>\r\n                           <td\r\n                              onClick={() =>\r\n                                 (window.location.href = `/transaction/credit/${credit.id}`)\r\n                              }\r\n                           >\r\n                              {credit.type}\r\n                           </td>\r\n                           <td\r\n                              onClick={() =>\r\n                                 (window.location.href = `/transaction/credit/${credit.id}`)\r\n                              }\r\n                           >\r\n                              {credit.balance}\r\n                           </td>\r\n                           <td\r\n                              onClick={() =>\r\n                                 (window.location.href = `/transaction/credit/${credit.id}`)\r\n                              }\r\n                           >\r\n                              {credit.creditLimit}\r\n                           </td>\r\n                           <td>\r\n                              <form\r\n                                 action={`/credit/edit/${credit.id}/${this.props.idClient}`}\r\n                              >\r\n                                 <button className=\"btn btn-warning\">\r\n                                    Sửa\r\n                                 </button>\r\n                              </form>\r\n                              <button\r\n                                 className=\"btn btn-dark ml-3\"\r\n                                 onClick={this._deleteHandle.bind(\r\n                                    this,\r\n                                    credit.id,\r\n                                 )}\r\n                              >\r\n                                 Xoá\r\n                              </button>\r\n                           </td>\r\n                        </tr>\r\n                     ))}\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         );\r\n   }\r\n}\r\n\r\nexport default TblCredit;\r\n","import React from \"react\";\r\nimport Nav from \"../../components/Navigation\";\r\nimport { getClientByID } from \"../../api/ClientAPI\";\r\nimport TblDeposit from \"./deposit/TblDeposit\";\r\nimport TblCredit from \"./credit/TblCredit\";\r\n\r\nclass Account extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {\r\n         client: { depositAccounts: [], creditAccounts: [] },\r\n      };\r\n   }\r\n\r\n   componentWillMount() {\r\n      document.title = \"Bank | Acount\";\r\n   }\r\n\r\n   async componentDidMount() {\r\n      const client = await getClientByID(this.props.match.params.id);\r\n      this.setState({ client: client });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Nav />\r\n            <div className=\"container\">\r\n               <div className=\"row mt-4 bg-white content pt-3 pb-3\">\r\n                  <div className=\"text-center mb-3\">\r\n                     <h1>\r\n                        Thông tin tài khoản của khách hàng:{\" \"}\r\n                        {this.state.client.name}\r\n                     </h1>\r\n                  </div>\r\n                  <div className=\"d-flex mb-3 mt-3 align-item-center\">\r\n                     <h4>Tài khoản gủi tiền:</h4>\r\n                     <a\r\n                        className=\"btn btn-success ml-5\"\r\n                        href={`/deposit/add/${this.state.client.id}`}\r\n                     >\r\n                        Thêm tài khoản gửi tiền\r\n                     </a>\r\n                     <a\r\n                        className=\"btn btn-success ml-3\"\r\n                        href={`/transfers/${this.props.match.params.id}`}\r\n                     >\r\n                        Thêm giao dịch chuyển tiền\r\n                     </a>\r\n                  </div>\r\n                  <TblDeposit\r\n                     deposits={this.state.client.depositAccounts}\r\n                     idClient={this.state.client.id}\r\n                  />\r\n               </div>\r\n               <div className=\"row mt-3 bg-white content pt-3 pb-3\">\r\n                  <div className=\"d-flex mb-3 align-item-center\">\r\n                     <h4>Tài khoản tín dụng:</h4>\r\n                     <a\r\n                        className=\"btn btn-success ml-5\"\r\n                        href={`/credit/add/${this.state.client.id}`}\r\n                     >\r\n                        Thêm tài khoản tín dụng\r\n                     </a>\r\n                  </div>\r\n                  <TblCredit\r\n                     credits={this.state.client.creditAccounts}\r\n                     idClient={this.state.client.id}\r\n                  />\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Account;\r\n","import React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { insertDeposit } from \"../../../api/DepositAPI\";\r\nimport { getAllEmployee } from \"../../../api/EmployeeAPI\";\r\n\r\nclass DepositAdd extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {\r\n         deposit: { client: {}, employeeCreate: {} },\r\n         employees: [],\r\n      };\r\n   }\r\n\r\n   componentWillMount() {\r\n      document.title = \"Bank | Add Deposit Account\";\r\n   }\r\n\r\n   async componentDidMount() {\r\n      const employees = await getAllEmployee();\r\n      this.setState({\r\n         deposit: {\r\n            client: { id: this.props.match.params.id },\r\n            employeeCreate: {},\r\n         },\r\n         employees: employees,\r\n      });\r\n   }\r\n\r\n   async _addHandle() {\r\n      const isAdd = await insertDeposit(this.state.deposit);\r\n      if (isAdd.status === 200)\r\n         window.location.href = `/client/${this.props.match.params.id}`;\r\n      else Swal.fire(\"Thêm không thành công\", \"\", \"error\");\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"form-infor\">\r\n            <h2 className=\"title\">Thêm tài khoản gửi tiền</h2>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fab fa-codepen\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Loại tài khoản\"\r\n                  value={this.state.deposit.type}\r\n                  onChange={(e) => {\r\n                     let newDeposit = this.state.deposit;\r\n                     newDeposit.type = e.target.value;\r\n                     this.setState({ deposit: newDeposit });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-percent\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Lãi suất hàng tháng\"\r\n                  type=\"number\"\r\n                  value={this.state.deposit.rate}\r\n                  onChange={(e) => {\r\n                     let newDeposit = this.state.deposit;\r\n                     newDeposit.rate = Number.parseFloat(e.target.value);\r\n                     this.setState({ deposit: newDeposit });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-dollar-sign\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Số dư tối thiểu\"\r\n                  type=\"number\"\r\n                  value={this.state.deposit.minBalance}\r\n                  onChange={(e) => {\r\n                     let newDeposit = this.state.deposit;\r\n                     newDeposit.minBalance = Number.parseFloat(e.target.value);\r\n                     this.setState({ deposit: newDeposit });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-user-tie\"></i>\r\n               </span>\r\n               <select\r\n                  className=\"form-select\"\r\n                  value={this.state.deposit.employeeCreate.id}\r\n                  onChange={(e) => {\r\n                     let preDeposit = this.state.deposit;\r\n                     preDeposit.employeeCreate.id = Number.parseInt(\r\n                        e.target.value,\r\n                     );\r\n                     this.setState({ deposit: preDeposit });\r\n                  }}\r\n               >\r\n                  <option disabled selected>\r\n                     Chọn một nhân viên\r\n                  </option>\r\n                  {this.state.employees.map((employee: any) => (\r\n                     <option key={employee.id} value={employee.id}>\r\n                        id: {employee.id} - name: {employee.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n            </div>\r\n            <div className=\"action\">\r\n               <button\r\n                  className=\"btn btn-success\"\r\n                  onClick={this._addHandle.bind(this)}\r\n               >\r\n                  Thêm\r\n               </button>\r\n               <button\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => this.props.history.goBack()}\r\n               >\r\n                  Huỷ\r\n               </button>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default DepositAdd;\r\n","import React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getDepositByID, updateDeposit } from \"../../../api/DepositAPI\";\r\n\r\nclass DepositEdit extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {\r\n         deposit: {},\r\n      };\r\n   }\r\n\r\n   componentWillMount() {\r\n      document.title = \"Bank | Edit Deposit Account\";\r\n   }\r\n\r\n   async componentDidMount() {\r\n      const deposit = await getDepositByID(this.props.match.params.idDeposit);\r\n      this.setState({ deposit: deposit });\r\n   }\r\n\r\n   async _saveHandle() {\r\n      const isSave = await updateDeposit(this.state.deposit);\r\n      if (isSave.status === 200)\r\n         window.location.href = `/client/${this.props.match.params.idClient}`;\r\n      else Swal.fire(\"Sửa không thành công\", \"\", \"error\");\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"form-infor\">\r\n            <h2 className=\"title\">Sửa tài khoản gửi tiền</h2>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-credit-card\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Mã tài khoản\"\r\n                  disabled\r\n                  value={this.state.deposit.id}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fab fa-codepen\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Loại tài khoản\"\r\n                  value={this.state.deposit.type}\r\n                  onChange={(e) => {\r\n                     let newDeposit = this.state.deposit;\r\n                     newDeposit.type = e.target.value;\r\n                     this.setState({ deposit: newDeposit });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-wallet\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Số dư\"\r\n                  type=\"number\"\r\n                  value={this.state.deposit.balance}\r\n                  onChange={(e) => {\r\n                     let newDeposit = this.state.deposit;\r\n                     newDeposit.balance = Number.parseFloat(e.target.value);\r\n                     this.setState({ deposit: newDeposit });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-percent\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Lãi suất hàng tháng\"\r\n                  type=\"number\"\r\n                  value={this.state.deposit.rate}\r\n                  onChange={(e) => {\r\n                     let newDeposit = this.state.deposit;\r\n                     newDeposit.rate = Number.parseFloat(e.target.value);\r\n                     this.setState({ deposit: newDeposit });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-dollar-sign\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Số dư tối thiểu\"\r\n                  type=\"number\"\r\n                  value={this.state.deposit.minBalance}\r\n                  onChange={(e) => {\r\n                     let newDeposit = this.state.deposit;\r\n                     newDeposit.minBalance = Number.parseFloat(e.target.value);\r\n                     this.setState({ deposit: newDeposit });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"action\">\r\n               <button\r\n                  className=\"btn btn-success\"\r\n                  onClick={this._saveHandle.bind(this)}\r\n               >\r\n                  Lưu\r\n               </button>\r\n               <button\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => this.props.history.goBack()}\r\n               >\r\n                  Huỷ\r\n               </button>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default DepositEdit;\r\n","import React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { insertCredit } from \"../../../api/CreditAPI\";\r\nimport { getAllEmployee } from \"../../../api/EmployeeAPI\";\r\n\r\nclass CreditAdd extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {\r\n         credit: { client: {}, employeeCreate: {} },\r\n         employees: [],\r\n      };\r\n   }\r\n\r\n   componentWillMount() {\r\n      document.title = \"Bank | Add Credit Account\";\r\n   }\r\n\r\n   async componentDidMount() {\r\n      const employees = await getAllEmployee();\r\n      this.setState({\r\n         credit: {\r\n            client: { id: this.props.match.params.id },\r\n            employeeCreate: {},\r\n         },\r\n         employees: employees,\r\n      });\r\n   }\r\n\r\n   async _addHandle() {\r\n      let newCredit = this.state.credit;\r\n      newCredit.creditLimit = Number.parseFloat(this.state.creditLimit);\r\n      this.setState({ credit: newCredit });\r\n      const isAdd = await insertCredit(this.state.credit);\r\n      if (isAdd.status === 200)\r\n         window.location.href = `/client/${this.props.match.params.id}`;\r\n      else Swal.fire(\"Thêm không thành công\", \"\", \"error\");\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"form-infor\">\r\n            <h2 className=\"title\">Thêm tài khoản tín dụng</h2>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fab fa-codepen\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Loại tài khoản\"\r\n                  value={this.state.credit.type}\r\n                  onChange={(e) => {\r\n                     let newCredit = this.state.credit;\r\n                     newCredit.type = e.target.value;\r\n                     this.setState({ credit: newCredit });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-hourglass-end\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Hạn mứu tín dụng\"\r\n                  value={this.state.creditLimit}\r\n                  onChange={(e) =>\r\n                     this.setState({ creditLimit: e.target.value })\r\n                  }\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-user-tie\"></i>\r\n               </span>\r\n               <select\r\n                  className=\"form-select\"\r\n                  value={this.state.credit.employeeCreate.id}\r\n                  onChange={(e) => {\r\n                     let preCredit = this.state.credit;\r\n                     preCredit.employeeCreate.id = Number.parseInt(\r\n                        e.target.value,\r\n                     );\r\n                     this.setState({ credit: preCredit });\r\n                  }}\r\n               >\r\n                  <option disabled selected>\r\n                     Chọn một nhân viên\r\n                  </option>\r\n                  {this.state.employees.map((employee: any) => (\r\n                     <option key={employee.id} value={employee.id}>\r\n                        id: {employee.id} - name: {employee.name}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n            </div>\r\n            <div className=\"action\">\r\n               <button\r\n                  className=\"btn btn-success\"\r\n                  onClick={this._addHandle.bind(this)}\r\n               >\r\n                  Thêm\r\n               </button>\r\n               <button\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => this.props.history.goBack()}\r\n               >\r\n                  Huỷ\r\n               </button>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default CreditAdd;\r\n","import React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getCreditByID, updateCredit } from \"../../../api/CreditAPI\";\r\n\r\nclass CreditEdit extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {\r\n         credit: {},\r\n      };\r\n   }\r\n\r\n   componentWillMount() {\r\n      document.title = \"Bank | Edit Credit Account\";\r\n   }\r\n\r\n   async componentDidMount() {\r\n      const credit = await getCreditByID(this.props.match.params.idCredit);\r\n      this.setState({ credit: credit });\r\n   }\r\n\r\n   async _saveHandle() {\r\n      let newCredit = this.state.credit;\r\n      newCredit.creditLimit = Number.parseFloat(newCredit.creditLimit);\r\n      newCredit.balance = Number.parseFloat(newCredit.balance);\r\n      this.setState({ credit: newCredit });\r\n      const isSave = await updateCredit(this.state.credit);\r\n      if (isSave.status === 200)\r\n         window.location.href = `/client/${this.props.match.params.idClient}`;\r\n      else Swal.fire(\"Sửa không thành công\", \"\", \"error\");\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"form-infor\">\r\n            <h2 className=\"title\">Sửa tài khoản tín dụng</h2>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-credit-card\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Mã tài khoản\"\r\n                  disabled\r\n                  value={this.state.credit.id}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fab fa-codepen\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Loại tài khoản\"\r\n                  value={this.state.credit.type}\r\n                  onChange={(e) => {\r\n                     let newCredit = this.state.credit;\r\n                     newCredit.type = e.target.value;\r\n                     this.setState({ credit: newCredit });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-wallet\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Số dư\"\r\n                  value={this.state.credit.balance}\r\n                  onChange={(e) => {\r\n                     let newCredit = this.state.credit;\r\n                     newCredit.balance = e.target.value;\r\n                     this.setState({ credit: newCredit });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-hourglass-end\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Hạn mứu tín dụng\"\r\n                  value={this.state.credit.creditLimit}\r\n                  onChange={(e) => {\r\n                     let newCredit = this.state.credit;\r\n                     newCredit.creditLimit = e.target.value;\r\n                     this.setState({ credit: newCredit });\r\n                  }}\r\n               />\r\n            </div>\r\n            <div className=\"action\">\r\n               <button\r\n                  className=\"btn btn-success\"\r\n                  onClick={this._saveHandle.bind(this)}\r\n               >\r\n                  Lưu\r\n               </button>\r\n               <button\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => this.props.history.goBack()}\r\n               >\r\n                  Huỷ\r\n               </button>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default CreditEdit;\r\n","import React from \"react\";\r\n\r\nclass TblTran extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {};\r\n   }\r\n\r\n   render() {\r\n      if (this.props.transactions.length === 0)\r\n         return <h3>Không có giao dịch nào</h3>;\r\n      else\r\n         return (\r\n            <div>\r\n               <table className=\"table table-hover\">\r\n                  <thead className=\"bg-gray\">\r\n                     <tr>\r\n                        <th>ID</th>\r\n                        <th>Số tiền</th>\r\n                        <th>Nội dung</th>\r\n                        <th>Thời gian</th>\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {this.props.transactions.map((tran: any) => (\r\n                        <tr key={tran.id}>\r\n                           <th>{tran.id}</th>\r\n                           <td>{tran.amount}</td>\r\n                           <td>{tran.content}</td>\r\n                           <td>{new Date(tran.createAt).toLocaleString()}</td>\r\n                        </tr>\r\n                     ))}\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         );\r\n   }\r\n}\r\n\r\nexport default TblTran;\r\n","import React from \"react\";\r\nimport { getCreditByID } from \"../../api/CreditAPI\";\r\nimport { getDepositByID } from \"../../api/DepositAPI\";\r\nimport Nav from \"../../components/Navigation\";\r\nimport TblTran from \"./TblTran\";\r\n\r\nclass Transaction extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {\r\n         transactions: [],\r\n      };\r\n   }\r\n\r\n   async componentDidMount() {\r\n      if (this.props.match.params.type === \"deposit\") {\r\n         const deposit = await getDepositByID(this.props.match.params.id);\r\n         this.setState({ transactions: deposit.listTransaction });\r\n      } else if (this.props.match.params.type === \"credit\") {\r\n         const credit = await getCreditByID(this.props.match.params.id);\r\n         this.setState({ transactions: credit.listTransaction });\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Nav />\r\n            <div className=\"container\">\r\n               <div className=\"row mt-4 bg-white content pt-3 pb-3\">\r\n                  <div className=\"text-center mb-3\">\r\n                     <h1>Thông tin lịch sử giao dịch</h1>\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-around mb-3\">\r\n                     {this.props.match.params.type === \"credit\" ? (\r\n                        <a\r\n                           className=\"btn btn-success\"\r\n                           href={`/transaction/add/credit/${this.props.match.params.id}`}\r\n                        >\r\n                           Thêm giao dịch tín dụng\r\n                        </a>\r\n                     ) : (\r\n                        <a\r\n                           className=\"btn btn-success\"\r\n                           href={`/transaction/add/deposit/${this.props.match.params.id}`}\r\n                        >\r\n                           Thêm giao dịch gửi tiền\r\n                        </a>\r\n                     )}\r\n                  </div>\r\n                  <TblTran transactions={this.state.transactions} />\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Transaction;\r\n","import React from \"react\";\r\n\r\nclass PageNotFound extends React.Component {\r\n   render() {\r\n      return (\r\n         <div>\r\n            <h1>Page Not Found</h1>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React from \"react\";\r\nimport { getTop10Client } from \"../../api/ClientAPI\";\r\nimport Navigation from \"../../components/Navigation\";\r\nimport TblClient from \"../client/TblClient\";\r\n\r\nclass Top10Client extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {\r\n         clients: [],\r\n      };\r\n   }\r\n\r\n   async componentDidMount() {\r\n      const clients = await getTop10Client();\r\n      this.setState({ clients: clients });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Navigation />\r\n            <div className=\"container\">\r\n               <div className=\"row mt-4 bg-white content pt-3 pb-3\">\r\n                  <div className=\"text-center mb-3\">\r\n                     <h1>Thông tin top 10 khách hàng gửi nhiều tiền nhất</h1>\r\n                  </div>\r\n                  <TblClient clients={this.state.clients} />\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Top10Client;\r\n","import { config } from \"./config\";\r\n\r\nconst API_URL = config.API_URL + \"/transaction/\";\r\n\r\nexport const insertTranstion = async (tran: any) => {\r\n   const rawData = await fetch(API_URL, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(tran),\r\n   });\r\n   return rawData;\r\n};\r\n\r\nexport const deleteTransaction = async (id: any) => {\r\n   const rawData = await fetch(API_URL + id, {\r\n      method: \"DELETE\",\r\n   });\r\n   return rawData;\r\n};\r\n\r\nexport const transferMoney = async (\r\n   amount: any,\r\n   idCredit: any,\r\n   idDeposit: any,\r\n) => {\r\n   const rawData = await fetch(\r\n      API_URL +\r\n         `depositToCredit?amount=${amount}&id_credit=${idCredit}&id_deposit=${idDeposit}`,\r\n      {\r\n         method: \"POST\",\r\n      },\r\n   );\r\n   return rawData;\r\n};\r\n","import React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { insertTranstion } from \"../../api/TransactionAPI\";\r\n\r\nclass TransAddCredit extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {\r\n         content: \"\",\r\n         amount: \"\",\r\n      };\r\n   }\r\n\r\n   async _clickHandle() {\r\n      let tran;\r\n      if (this.props.match.params.type === \"credit\") {\r\n         tran = {\r\n            content: this.state.content,\r\n            amount: Number.parseFloat(this.state.amount),\r\n            creditAccount: { id: this.props.match.params.id },\r\n         };\r\n      } else if (this.props.match.params.type === \"deposit\") {\r\n         tran = {\r\n            content: this.state.content,\r\n            amount: Number.parseFloat(this.state.amount),\r\n            depositAccount: { id: this.props.match.params.id },\r\n         };\r\n      }\r\n      const isAdd = await insertTranstion(tran);\r\n      if (isAdd.status === 200)\r\n         window.location.href = `/transaction/${this.props.match.params.type}/${this.props.match.params.id}`;\r\n      else Swal.fire(\"Thêm không thành công\", \"\", \"error\");\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"form-infor\">\r\n            <h2 className=\"title\">Thêm giao dịch</h2>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"far fa-comment\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nội dung\"\r\n                  value={this.state.content}\r\n                  onChange={(e) => this.setState({ content: e.target.value })}\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-money-check-alt\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Số tiền\"\r\n                  value={this.state.amount}\r\n                  onChange={(e) =>\r\n                     this.setState({\r\n                        amount: e.target.value,\r\n                     })\r\n                  }\r\n               />\r\n            </div>\r\n            <div className=\"action\">\r\n               <button\r\n                  className=\"btn btn-success\"\r\n                  onClick={this._clickHandle.bind(this)}\r\n               >\r\n                  Thêm\r\n               </button>\r\n               <a\r\n                  className=\"btn btn-dark\"\r\n                  href={`/transaction/${this.props.match.params.type}/${this.props.match.params.id}`}\r\n               >\r\n                  Quay lại\r\n               </a>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default TransAddCredit;\r\n","import React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getAllCredit } from \"../../api/CreditAPI\";\r\nimport { getAllDeposit } from \"../../api/DepositAPI\";\r\nimport { transferMoney } from \"../../api/TransactionAPI\";\r\n\r\nclass TransTransfers extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {\r\n         credits: [],\r\n         deposits: [],\r\n      };\r\n   }\r\n\r\n   async componentDidMount() {\r\n      const credits = await getAllCredit();\r\n      const deposits = await getAllDeposit();\r\n      this.setState({ credits: credits, deposits: deposits });\r\n   }\r\n\r\n   async _clickHandle() {\r\n      const isAdd = await transferMoney(\r\n         this.state.amount,\r\n         this.state.idCredit,\r\n         this.state.idDeposit,\r\n      );\r\n      if (isAdd.status === 200)\r\n         window.location.href = `/client/${this.props.match.params.id}`;\r\n      else Swal.fire(\"Thêm không thành công\", \"\", \"error\");\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"form-infor\">\r\n            <h2 className=\"title\">Thêm giao dịch chuyển tiền</h2>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-money-check-alt\"></i>\r\n               </span>\r\n               <input\r\n                  className=\"form-control\"\r\n                  placeholder=\"Số tiền\"\r\n                  value={this.state.amount}\r\n                  onChange={(e) =>\r\n                     this.setState({\r\n                        amount: e.target.value,\r\n                     })\r\n                  }\r\n               />\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-user\"></i>\r\n               </span>\r\n               <select\r\n                  className=\"form-select\"\r\n                  value={this.state.idCredit}\r\n                  onChange={(e) =>\r\n                     this.setState({\r\n                        idCredit: Number.parseInt(e.target.value),\r\n                     })\r\n                  }\r\n               >\r\n                  <option disabled selected>\r\n                     Chọn tài khoản tín dụng\r\n                  </option>\r\n                  {this.state.credits.map((credit: any) => (\r\n                     <option key={credit.id} value={credit.id}>\r\n                        id: {credit.id} - số dư: {credit.balance}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n            </div>\r\n            <div className=\"input-group\">\r\n               <span className=\"input-group-text\">\r\n                  <i className=\"fas fa-user-tie\"></i>\r\n               </span>\r\n               <select\r\n                  className=\"form-select\"\r\n                  value={this.state.idDeposit}\r\n                  onChange={(e) =>\r\n                     this.setState({\r\n                        idDeposit: Number.parseInt(e.target.value),\r\n                     })\r\n                  }\r\n               >\r\n                  <option disabled selected>\r\n                     Chọn tài khoản gửi tiền\r\n                  </option>\r\n                  {this.state.deposits.map((deposit: any) => (\r\n                     <option key={deposit.id} value={deposit.id}>\r\n                        id: {deposit.id} - số dư: {deposit.balance}\r\n                     </option>\r\n                  ))}\r\n               </select>\r\n            </div>\r\n            <div className=\"action\">\r\n               <button\r\n                  className=\"btn btn-success\"\r\n                  onClick={this._clickHandle.bind(this)}\r\n               >\r\n                  Thêm\r\n               </button>\r\n               <button\r\n                  className=\"btn btn-dark\"\r\n                  onClick={() => this.props.history.goBack()}\r\n               >\r\n                  Huỷ\r\n               </button>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default TransTransfers;\r\n","import React from \"react\";\r\nimport { getByBalance } from \"../../api/CreditAPI\";\r\nimport Navigation from \"../../components/Navigation\";\r\nimport TblCredit from \"../account/credit/TblCredit\";\r\n\r\nclass AccountInDebt extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = { credits: [] };\r\n   }\r\n\r\n   async componentDidMount() {\r\n      const credits = await getByBalance();\r\n      this.setState({ credits: credits });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Navigation />\r\n            <div className=\"container\">\r\n               <div className=\"row mt-4 bg-white content pt-3 pb-3\">\r\n                  <div className=\"text-center mb-3\">\r\n                     <h1>Các tài khoản tín dụng còn nợ</h1>\r\n                  </div>\r\n                  <TblCredit credits={this.state.credits} />\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default AccountInDebt;\r\n","import React from \"react\";\r\n\r\nclass TblTransaction extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = {};\r\n   }\r\n   render() {\r\n      if (this.props.transactions.length === 0)\r\n         return (\r\n            <div className=\"row mt-3 bg-white content pt-3 pb-3\">\r\n               <h3>Không có giao dịch nào</h3>\r\n            </div>\r\n         );\r\n      else\r\n         return (\r\n            <div className=\"row mt-3 bg-white content pt-3 pb-3\">\r\n               <h4>Giao dịch:</h4>\r\n               <table className=\"table table-hover\">\r\n                  <thead className=\"bg-gray\">\r\n                     <tr>\r\n                        <th>ID</th>\r\n                        <th>Số tiền</th>\r\n                        <th>Nội dung</th>\r\n                        <th>Thời gian</th>\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {this.props.transactions.map((tran: any) => (\r\n                        <tr key={tran.id}>\r\n                           <th>{tran.id}</th>\r\n                           <td>{tran.amount}</td>\r\n                           <td>{tran.content}</td>\r\n                           <td>{new Date(tran.createAt).toLocaleString()}</td>\r\n                        </tr>\r\n                     ))}\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         );\r\n   }\r\n}\r\n\r\nexport default TblTransaction;\r\n","import React from \"react\";\r\nimport TblTransaction from \"./TblTransaction\";\r\n\r\nclass TblCredit extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = { transactions: [] };\r\n   }\r\n   render() {\r\n      if (this.props.credits.length === 0)\r\n         return (\r\n            <div className=\"row mt-3 bg-white content pt-3 pb-3\">\r\n               <h3>Không tìm thấy tài khoản tín dụng</h3>\r\n            </div>\r\n         );\r\n      else\r\n         return (\r\n            <div>\r\n               <div className=\"row mt-3 bg-white content pt-3 pb-3\">\r\n                  <h4>Tài khoản tín dụng:</h4>\r\n                  <table className=\"table table-hover\">\r\n                     <thead className=\"bg-gray\">\r\n                        <tr>\r\n                           <th>Mã số</th>\r\n                           <th>Loại</th>\r\n                           <th>Số dư</th>\r\n                           <th>Hạn mức tín dụng</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {this.props.credits.map((credit: any) => (\r\n                           <tr\r\n                              key={credit.id}\r\n                              onClick={() =>\r\n                                 this.setState({\r\n                                    transactions: credit.listTransaction,\r\n                                 })\r\n                              }\r\n                           >\r\n                              <th>{credit.id}</th>\r\n                              <td>{credit.type}</td>\r\n                              <td>{credit.balance}</td>\r\n                              <td>{credit.creditLimit}</td>\r\n                           </tr>\r\n                        ))}\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n               <TblTransaction transactions={this.state.transactions} />\r\n            </div>\r\n         );\r\n   }\r\n}\r\n\r\nexport default TblCredit;\r\n","import React from \"react\";\r\nimport { getAllClient } from \"../../api/ClientAPI\";\r\nimport { getByTimeTransaction } from \"../../api/CreditAPI\";\r\nimport Navigation from \"../../components/Navigation\";\r\nimport TblCredit from \"./TblCredit\";\r\n\r\nclass StatisticTransaction extends React.Component<any, any> {\r\n   constructor(props: any) {\r\n      super(props);\r\n      this.state = { clients: [], credits: [] };\r\n   }\r\n\r\n   async componentDidMount() {\r\n      const clients = await getAllClient();\r\n      this.setState({ clients: clients });\r\n   }\r\n\r\n   async _onUpdate() {\r\n      const credits = await getByTimeTransaction(\r\n         this.state.idClient,\r\n         this.state.start,\r\n         this.state.end,\r\n      );\r\n      this.setState({ credits: credits });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Navigation />\r\n            <div className=\"container\">\r\n               <div className=\"row mt-4 bg-white content pt-3 pb-3\">\r\n                  <div className=\"text-center mb-3\">\r\n                     <h1>Thống kê các giao dịch của khách hàng</h1>\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-around\">\r\n                     <div className=\"input-group w-25\">\r\n                        <span className=\"input-group-text\">\r\n                           <i className=\"fas fa-user\"></i>\r\n                        </span>\r\n                        <select\r\n                           className=\"form-select\"\r\n                           value={this.state.idClient}\r\n                           onChange={async (e) => {\r\n                              await this.setState({\r\n                                 idClient: Number.parseInt(e.target.value),\r\n                              });\r\n                              this._onUpdate();\r\n                           }}\r\n                        >\r\n                           <option disabled selected>\r\n                              Chọn một khách hàng\r\n                           </option>\r\n                           {this.state.clients.map((client: any) => (\r\n                              <option key={client.id} value={client.id}>\r\n                                 id: {client.id} - name: {client.name}\r\n                              </option>\r\n                           ))}\r\n                        </select>\r\n                     </div>\r\n                     <div className=\"input-group time-select\">\r\n                        <span className=\"input-group-text\">Bắt đầu</span>\r\n                        <input\r\n                           className=\"form-control\"\r\n                           required\r\n                           type=\"datetime-local\"\r\n                           value={this.state.start}\r\n                           onChange={async (e) => {\r\n                              await this.setState({ start: e.target.value });\r\n                              this._onUpdate();\r\n                           }}\r\n                        />\r\n                     </div>\r\n                     <div className=\"input-group time-select\">\r\n                        <span className=\"input-group-text\">Kết thúc</span>\r\n                        <input\r\n                           className=\"form-control\"\r\n                           required\r\n                           type=\"datetime-local\"\r\n                           value={this.state.end}\r\n                           onChange={async (e) => {\r\n                              await this.setState({ end: e.target.value });\r\n                              this._onUpdate();\r\n                           }}\r\n                        />\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               <TblCredit credits={this.state.credits} />\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default StatisticTransaction;\r\n","import React, { StrictMode } from \"react\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\n// import pages\nimport Home from \"./pages/home/Home\";\nimport Client from \"./pages/client/Client\";\nimport ClientAdd from \"./pages/client/ClientAdd\";\nimport ClientEdit from \"./pages/client/ClientEdit\";\nimport Employee from \"./pages/employee/Employee\";\nimport EmployeeAdd from \"./pages/employee/EmployeeAdd\";\nimport EmployeeEdit from \"./pages/employee/EmployeeEdit\";\nimport EmployeeSalary from \"./pages/employee/EmployeeSalary\";\nimport Account from \"./pages/account/Account\";\nimport DepositAdd from \"./pages/account/deposit/DepositAdd\";\nimport DepositEdit from \"./pages/account/deposit/DepositEdit\";\nimport CreditAdd from \"./pages/account/credit/CreditAdd\";\nimport CreditEdit from \"./pages/account/credit/CreditEdit\";\nimport Transaction from \"./pages/transaction/Transaction\";\nimport PageNotFound from \"./pages/page_not_found/PageNotFound\";\nimport Top10Client from \"./pages/statistic/Top10Client\";\nimport TransAdd from \"./pages/transaction/TransAdd\";\nimport TransTransfers from \"./pages/transaction/TransTransfers\";\nimport AccountInDebt from \"./pages/statistic/AccountInDebt\";\nimport StatisticTransaction from \"./pages/statistic/StatisticTransaction\";\n\nrender(\n   <StrictMode>\n      <BrowserRouter>\n         <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/client/\" component={Client} />\n            <Route exact path=\"/client/add\" component={ClientAdd} />\n            <Route exact path=\"/client/edit/:id\" component={ClientEdit} />\n            <Route exact path=\"/employee\" component={Employee} />\n            <Route exact path=\"/employee/add\" component={EmployeeAdd} />\n            <Route exact path=\"/employee/edit/:id\" component={EmployeeEdit} />\n            <Route\n               exact\n               path=\"/employee/salary/:id\"\n               component={EmployeeSalary}\n            />\n            <Route exact path=\"/client/:id\" component={Account} />\n            <Route exact path=\"/deposit/add/:id\" component={DepositAdd} />\n            <Route\n               exact\n               path=\"/deposit/edit/:idDeposit/:idClient\"\n               component={DepositEdit}\n            />\n            <Route exact path=\"/credit/add/:id\" component={CreditAdd} />\n            <Route\n               exact\n               path=\"/credit/edit/:idCredit/:idClient\"\n               component={CreditEdit}\n            />\n            <Route\n               exact\n               path=\"/transaction/:type/:id\"\n               component={Transaction}\n            />\n            <Route\n               exact\n               path=\"/transaction/add/:type/:id\"\n               component={TransAdd}\n            />\n            <Route exact path=\"/transfers/:id\" component={TransTransfers} />\n            <Route\n               exact\n               path=\"/statistic/transaction\"\n               component={StatisticTransaction}\n            />\n            <Route\n               exact\n               path=\"/statistic/account-in-debt\"\n               component={AccountInDebt}\n            />\n            <Route exact path=\"/statistic/top10\" component={Top10Client} />\n            <Route path=\"/404\" component={PageNotFound} />\n            <Redirect to=\"/404\" />\n         </Switch>\n      </BrowserRouter>\n   </StrictMode>,\n   document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}